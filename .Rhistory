TrainData = read.csv("https://s3.amazonaws.com/cumis/train/csv")
View(TrainData)
View(TrainData)
View(TrainData)
TrainData = read.csv("https://s3.amazonaws.com/cumis/train.csv")
> TestData = read.csv("https://s3.amazonaws.com/cumis/test.csv")
TestData = read.csv("https://s3.amazonaws.com/cumis/test.csv")
View(TestData)
View(TrainData)
table(TrainData$Survived, TrainData$Sex)
View(TestData)
View(TrainData)
barplot(table(TrainData$Survived),names.arg = c("Perished", "Survived"), + main = "Train Data Passener Fate", col = "black")
TestData$Survived <- 0
TestData$Survived[TestData$Sex == "female"] <- 1
TestData$Survived[TestData$Age < 16] <- 1
TestData$Survived[TestData$Pclass == 3] <- 0
TestData$Survived[TestData$Pclass == 1] <- 1
###################### FIRST : SIMPLE LINEAR REGRESSION ######################
##### Model Fitting #####
advertising = read.csv(file.choose(), head=TRUE)
head(advertising)
###################### FIRST : GENERATE THE OBJECT(or DATA TYPES) ######################
################### OBJECT : vector ###################
x <- c(2,1,1,3)
x
Y <- 2 ; Y
y <- 1:4 ; Y ; y
2^(0:5)
10*(1:3)
x+y;2*x^2+1
mean(abs(rnorm(100)))
rnorm(10)
rnorm(10)
pdf("xh.pdf")
histo(rnorm(100))
hist(rnorm(100))
dev.off
x <- c(1,2,4)
x
q <-c(x,x,8)
q
x[2]
x[1]
x[0]
x[2:3]
mean(x)
sd(x)
y <- 1:4 ; Y ; y
2^(0:5)
10*(1:3)
x+y;2*x^2+1
x[1] <- 99
x[c(2,3)] <- 3:4 ; x
pi
exp(1)
# addition : basic statistics...
sum(x);mean(x);var(x);sd(x)
# addition : sequence
y <- seq(from=1, to=10, by=3) ; y
y <- seq(from=1, to=11, by=3) ; y
?seq #도움말, 모르거나 syntax가 기억나지 않는 함수는 꼭 찾아보자!!
seq(from=3, to=10, length.out=1000)
rep(c(0,1), c(3,5)) #0을 3번 1을 5번
################### OBJECT : matrix ###################
A <- matrix(x, nrow=2, ncol=2) ; A
t(A)
solve(A) %*% A
diag(1:10) #10x10 diagonal matrix
diag(4) #4x4 identity matrix
diag(A) <- 2 #diagonal elements of A 에 2를 다 넣어준다.
diag(10, 3, 4)
A2 <- matrix(seq(3,10,length.out=12), nrow=4 ,byrow=T)
A2[2,1]
A2[3:4,]
matrix(1, nrow=4 ,ncol=4, byrow=T)
#addtion : bind
P <- matrix(1, nrow=4 ,ncol=4, byrow=T); P
Q <- matrix(2, nrow=4 ,ncol=4, byrow=T); Q
rbind(P,Q)
cbind(P,Q)
################### OBJECT : data.frame ###################
B <- data.frame(a=1:5, b=2:6)
c("c", "d")
colnames(B) <- c("c", "d")
as.data.frame(A2)
colnames(A2) <- paste("X",1:3, sep="") #?paste
paste("X",c(1,2,9), sep="")
#txt, csv파일 만든후 실행
read.table("D:\\class.txt", header=T)
B2 <- read.table("D:\\class.txt", header=T)
#내가 뭘 받은걸까?
head(B2)
tail(B2)
class(B2); class(A)
B3 <- read.csv("D:\\simple.csv",header=T)
# addition : basic statistics...
summary(B2)
#TIP
read.table(file.choose())
read.table(file.choose())
###################### FIRST : GENERATE THE OBJECT(or DATA TYPES) ######################
################### OBJECT : vector ###################
x <- c(2,1,1,3)
Y <- 2 ; Y
y <- 1:4 ; Y ; y
2^(0:5)
10*(1:3)
x+y;2*x^2+1
x[1] <- 99
x[c(2,3)] <- 3:4 ; x
pi
exp(1)
# addition : basic statistics...
sum(x);mean(x);var(x);sd(x)
# addition : sequence
y <- seq(from=1, to=10, by=3) ; y
y <- seq(from=1, to=11, by=3) ; y
?seq #도움말, 모르거나 syntax가 기억나지 않는 함수는 꼭 찾아보자!!
seq(from=3, to=10, length.out=1000)
rep(c(0,1), c(3,5)) #0을 3번 1을 5번
################### OBJECT : matrix ###################
A <- matrix(x, nrow=2, ncol=2) ; A
t(A)
solve(A) %*% A
diag(1:10) #10x10 diagonal matrix
diag(4) #4x4 identity matrix
diag(A) <- 2 #diagonal elements of A 에 2를 다 넣어준다.
diag(10, 3, 4)
A2 <- matrix(seq(3,10,length.out=12), nrow=4 ,byrow=T)
A2[2,1]
A2[3:4,]
matrix(1, nrow=4 ,ncol=4, byrow=T)
#addtion : bind
P <- matrix(1, nrow=4 ,ncol=4, byrow=T); P
Q <- matrix(2, nrow=4 ,ncol=4, byrow=T); Q
rbind(P,Q)
cbind(P,Q)
################### OBJECT : data.frame ###################
B <- data.frame(a=1:5, b=2:6)
c("c", "d")
colnames(B) <- c("c", "d")
as.data.frame(A2)
colnames(A2) <- paste("X",1:3, sep="") #?paste
paste("X",c(1,2,9), sep="")
#txt, csv파일 만든후 실행
read.table("D:\\class.txt", header=T)
B2 <- read.table("D:\\class.txt", header=T)
#내가 뭘 받은걸까?
head(B2)
tail(B2)
class(B2); class(A)
B3 <- read.csv("D:\\simple.csv",header=T)
# addition : basic statistics...
summary(B2)
#TIP
read.table(file.choose())
install.packages("devtools")
library(devtools)
install.packages("dplyr")
install.packages("ggplot2")
install.packages("shiny")
install_github("StatsWithR/statsr")
library(dplyr)
library(ggplot2)
library(statsr)
data(arbuthnot)
arbuthnot
View(arbuthnot)
View(arbuthnot)
dim(arbuthnot)
names(arbuthnot)
names?
name(arbuthnot)
names(arbuthnot)
B
# type your code for the Question 2 here, and Knit
B
arbuthnot$boys
arbuthnot$year
arbuthnot$girls
ggplot(data = arbuthnot, aes(x = year, y = girls)) +
geom_point()
ggplot(data = arbuthnot, aes(x = year, y = girls))
ggplot(data = arbuthnot, aes(x = year, y = girls)) +
geom_point()
arbuthnot$year
ggplot(data = arbuthnot)
ggplot(data = arbuthnot x= year, y = boys)
ggplot(data = arbuthnot, aes( x= year, y = boys))
+geom_point()
ggplot(data = arbuthnot, aes( x= year, y = boys))
ggplot(data = arbuthnot, aes( x= year, y = boys)) +
+geom_point()
ggplot(data = arbuthnot, aes( x= year, y = boys)) +
geom_point()
?ggplot
234324 +2343
arbuthnot$boys + arbuthnot$girls
ggplot(data =arbuthnot, aes(x = year, y = girls + boys)) +
geom_point()
arbuthnot <- arbuthnot %>%
mutate(total = boys + girls)
View(arbuthnot)
View(arbuthnot)
?view
?View
?=
ggplot(data =arbuthnot, aes(x = years, y = total)) + geom_line()
ggplot(data =arbuthnot, aes(x = year, y = total)) + geom_line()
ggplot(data =arbuthnot, aes(x = year, y = total)) + geom_line() + geom_point()
ggplot(data =arbuthnot, aes(x = year, y = boys/total)) + geom_line() + geom_point()
arbuthnot <- arbuthnot %>%
mutate(more_boys = boys > girls)
?View
View(arbuthnot)
ggplot(data =arbuthnot, aes(x = year, y = boys/total)) + geom_line() + geom_point()
data(present)
View(present)
?vars
?var
?vars
?range
range(present$year)
present <- present %>%
mutate(total = boys + girls)
View(present)
present <- present %>%
mutate(prop_boys = boys / total)
View(present)
ggplot ( data = present aes(x= year, y = prop_boys)) + geom_point() + geom_line()
ggplot ( data = present, aes(x= year, y = prop_boys)) + geom_point() + geom_line()
present <- present %>%
mutate(more_boys = boys > girls)
View(present)
present <- present %>%
mutate(prop_boy_girl = boys/ girls)
View(present)
ggplot(data = present, aes(x = year, y = prop_boy_girl)) +
geom_point()+geom_line()
ggplot(data = present, aes(x= year, y = total)) +geom_line()
ggplot(data = present, aes(x= year, y = total)) +geom_line() + geom_point()
present %>%
mutate(total = ?)
arrange(desc(total))
arrange(present)
arrange(present, desc(total))
setwd("~/project/r")
help.start
help.start()
library(statsr)
statsr
library(dplyr)
library(ggplot2)
data("nycflights")
nycflights
View(nycflights)
names(nycflights)
?nycflights
str(nycflights)
ggplot (data =nycflights, aes(x= dep_delay)) + geom_histogram()
ggplot (data =nycflights, aes(x= dep_delay)) + geom_histogram(binwidth = 15)
ggplot (data =nycflights, aes(x= dep_delay)) + geom_histogram(binwidth = 5)
ggplot (data =nycflights, aes(x= dep_delay)) + geom_histogram(binwidth = 1)
ggplot (data =nycflights, aes(x= dep_delay)) + geom_histogram(binwidth = 155)
rdu_flights <- nycflights %>%
filter(dest == "RDU")
View(rdu_flights)
ggplot(data =rdu_flights, aes(x= dep_delay)) + geom_histogram(binwidth binwidth = 1)
ggplot(data =rdu_flights, aes(x= dep_delay)) + geom_histogram(binwidth = 1)
ggplot(data =rdu_flights, aes(x= dep_delay)) + geom_histogram()
rdu_flights %>%
summarise( mean_dd = mean(dep_delay), sd_dd = sd(dep_delay), n = n())
