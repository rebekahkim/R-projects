I( exp* reg* deg* com* emp* exp^2 )+
I( edu* exp* reg* deg* com* emp* exp^2 )+
I( city* reg* deg* com* emp* exp^2 )+
I( edu* city* reg* deg* com* emp* exp^2 )+
I( exp* city* reg* deg* com* emp* exp^2 )+
I( edu* exp* city* reg* deg* com* emp* exp^2 )+
I( race* deg* com* emp* exp^2 )+
I( edu* race* deg* com* emp* exp^2 )+
I( exp* race* deg* com* emp* exp^2 )+
I( edu* exp* race* deg* com* emp* exp^2 )+
I( city* race* deg* com* emp* exp^2 )+
I( edu* city* race* deg* com* emp* exp^2 )+
I( exp* city* race* deg* com* emp* exp^2 )+
I( edu* exp* city* race* deg* com* emp* exp^2 )+
I( reg* race* deg* com* emp* exp^2 )+
I( edu* reg* race* deg* com* emp* exp^2 )+
I( exp* reg* race* deg* com* emp* exp^2 )+
I( edu* exp* reg* race* deg* com* emp* exp^2 )+
I( city* reg* race* deg* com* emp* exp^2 )+
I( edu* city* reg* race* deg* com* emp* exp^2 )+
I( exp* city* reg* race* deg* com* emp* exp^2 )+
I( edu* exp* city* reg* race* deg* com* emp* exp^2 )+
I( edu^2* exp^2 )+
I( edu* edu^2* exp^2 )+
I( exp* edu^2* exp^2 )+
I( edu* exp* edu^2* exp^2 )+
I( city* edu^2* exp^2 )+
I( edu* city* edu^2* exp^2 )+
I( exp* city* edu^2* exp^2 )+
I( edu* exp* city* edu^2* exp^2 )+
I( reg* edu^2* exp^2 )+
I( edu* reg* edu^2* exp^2 )+
I( exp* reg* edu^2* exp^2 )+
I( edu* exp* reg* edu^2* exp^2 )+
I( city* reg* edu^2* exp^2 )+
I( edu* city* reg* edu^2* exp^2 )+
I( exp* city* reg* edu^2* exp^2 )+
I( edu* exp* city* reg* edu^2* exp^2 )+
I( race* edu^2* exp^2 )+
I( edu* race* edu^2* exp^2 )+
I( exp* race* edu^2* exp^2 )+
I( edu* exp* race* edu^2* exp^2 )+
I( city* race* edu^2* exp^2 )+
I( edu* city* race* edu^2* exp^2 )+
I( exp* city* race* edu^2* exp^2 )+
I( edu* exp* city* race* edu^2* exp^2 )+
I( reg* race* edu^2* exp^2 )+
I( edu* reg* race* edu^2* exp^2 )+
I( exp* reg* race* edu^2* exp^2 )+
I( edu* exp* reg* race* edu^2* exp^2 )+
I( city* reg* race* edu^2* exp^2 )+
I( edu* city* reg* race* edu^2* exp^2 )+
I( exp* city* reg* race* edu^2* exp^2 )+
I( edu* exp* city* reg* race* edu^2* exp^2 )+
I( deg* edu^2* exp^2 )+
I( edu* deg* edu^2* exp^2 )+
I( exp* deg* edu^2* exp^2 )+
I( edu* exp* deg* edu^2* exp^2 )+
I( city* deg* edu^2* exp^2 )+
I( edu* city* deg* edu^2* exp^2 )+
I( exp* city* deg* edu^2* exp^2 )+
I( edu* exp* city* deg* edu^2* exp^2 )+
I( reg* deg* edu^2* exp^2 )+
I( edu* reg* deg* edu^2* exp^2 )+
I( exp* reg* deg* edu^2* exp^2 )+
I( edu* exp* reg* deg* edu^2* exp^2 )+
I( city* reg* deg* edu^2* exp^2 )+
I( edu* city* reg* deg* edu^2* exp^2 )+
I( exp* city* reg* deg* edu^2* exp^2 )+
I( edu* exp* city* reg* deg* edu^2* exp^2 )+
I( race* deg* edu^2* exp^2 )+
I( edu* race* deg* edu^2* exp^2 )+
I( exp* race* deg* edu^2* exp^2 )+
I( edu* exp* race* deg* edu^2* exp^2 )+
I( city* race* deg* edu^2* exp^2 )+
I( edu* city* race* deg* edu^2* exp^2 )+
I( exp* city* race* deg* edu^2* exp^2 )+
I( edu* exp* city* race* deg* edu^2* exp^2 )+
I( reg* race* deg* edu^2* exp^2 )+
I( edu* reg* race* deg* edu^2* exp^2 )+
I( exp* reg* race* deg* edu^2* exp^2 )+
I( edu* exp* reg* race* deg* edu^2* exp^2 )+
I( city* reg* race* deg* edu^2* exp^2 )+
I( edu* city* reg* race* deg* edu^2* exp^2 )+
I( exp* city* reg* race* deg* edu^2* exp^2 )+
I( edu* exp* city* reg* race* deg* edu^2* exp^2 )+
I( com* edu^2* exp^2 )+
I( edu* com* edu^2* exp^2 )+
I( exp* com* edu^2* exp^2 )+
I( edu* exp* com* edu^2* exp^2 )+
I( city* com* edu^2* exp^2 )+
I( edu* city* com* edu^2* exp^2 )+
I( exp* city* com* edu^2* exp^2 )+
I( edu* exp* city* com* edu^2* exp^2 )+
I( reg* com* edu^2* exp^2 )+
I( edu* reg* com* edu^2* exp^2 )+
I( exp* reg* com* edu^2* exp^2 )+
I( edu* exp* reg* com* edu^2* exp^2 )+
I( city* reg* com* edu^2* exp^2 )+
I( edu* city* reg* com* edu^2* exp^2 )+
I( exp* city* reg* com* edu^2* exp^2 )+
I( edu* exp* city* reg* com* edu^2* exp^2 )+
I( race* com* edu^2* exp^2 )+
I( edu* race* com* edu^2* exp^2 )+
I( exp* race* com* edu^2* exp^2 )+
I( edu* exp* race* com* edu^2* exp^2 )+
I( city* race* com* edu^2* exp^2 )+
I( edu* city* race* com* edu^2* exp^2 )+
I( exp* city* race* com* edu^2* exp^2 )+
I( edu* exp* city* race* com* edu^2* exp^2 )+
I( reg* race* com* edu^2* exp^2 )+
I( edu* reg* race* com* edu^2* exp^2 )+
I( exp* reg* race* com* edu^2* exp^2 )+
I( edu* exp* reg* race* com* edu^2* exp^2 )+
I( city* reg* race* com* edu^2* exp^2 )+
I( edu* city* reg* race* com* edu^2* exp^2 )+
I( exp* city* reg* race* com* edu^2* exp^2 )+
I( edu* exp* city* reg* race* com* edu^2* exp^2 )+
I( deg* com* edu^2* exp^2 )+
I( edu* deg* com* edu^2* exp^2 )+
I( exp* deg* com* edu^2* exp^2 )+
I( edu* exp* deg* com* edu^2* exp^2 )+
I( city* deg* com* edu^2* exp^2 )+
I( edu* city* deg* com* edu^2* exp^2 )+
I( exp* city* deg* com* edu^2* exp^2 )+
I( edu* exp* city* deg* com* edu^2* exp^2 )+
I( reg* deg* com* edu^2* exp^2 )+
I( edu* reg* deg* com* edu^2* exp^2 )+
I( exp* reg* deg* com* edu^2* exp^2 )+
I( edu* exp* reg* deg* com* edu^2* exp^2 )+
I( city* reg* deg* com* edu^2* exp^2 )+
I( edu* city* reg* deg* com* edu^2* exp^2 )+
I( exp* city* reg* deg* com* edu^2* exp^2 )+
I( edu* exp* city* reg* deg* com* edu^2* exp^2 )+
I( race* deg* com* edu^2* exp^2 )+
I( edu* race* deg* com* edu^2* exp^2 )+
I( exp* race* deg* com* edu^2* exp^2 )+
I( edu* exp* race* deg* com* edu^2* exp^2 )+
I( city* race* deg* com* edu^2* exp^2 )+
I( edu* city* race* deg* com* edu^2* exp^2 )+
I( exp* city* race* deg* com* edu^2* exp^2 )+
I( edu* exp* city* race* deg* com* edu^2* exp^2 )+
I( reg* race* deg* com* edu^2* exp^2 )+
I( edu* reg* race* deg* com* edu^2* exp^2 )+
I( exp* reg* race* deg* com* edu^2* exp^2 )+
I( edu* exp* reg* race* deg* com* edu^2* exp^2 )+
I( city* reg* race* deg* com* edu^2* exp^2 )+
I( edu* city* reg* race* deg* com* edu^2* exp^2 )+
I( exp* city* reg* race* deg* com* edu^2* exp^2 )+
I( edu* exp* city* reg* race* deg* com* edu^2* exp^2 )+
I( emp* edu^2* exp^2 )+
I( edu* emp* edu^2* exp^2 )+
I( exp* emp* edu^2* exp^2 )+
I( edu* exp* emp* edu^2* exp^2 )+
I( city* emp* edu^2* exp^2 )+
I( edu* city* emp* edu^2* exp^2 )+
I( exp* city* emp* edu^2* exp^2 )+
I( edu* exp* city* emp* edu^2* exp^2 )+
I( reg* emp* edu^2* exp^2 )+
I( edu* reg* emp* edu^2* exp^2 )+
I( exp* reg* emp* edu^2* exp^2 )+
I( edu* exp* reg* emp* edu^2* exp^2 )+
I( city* reg* emp* edu^2* exp^2 )+
I( edu* city* reg* emp* edu^2* exp^2 )+
I( exp* city* reg* emp* edu^2* exp^2 )+
I( edu* exp* city* reg* emp* edu^2* exp^2 )+
I( race* emp* edu^2* exp^2 )+
I( edu* race* emp* edu^2* exp^2 )+
I( exp* race* emp* edu^2* exp^2 )+
I( edu* exp* race* emp* edu^2* exp^2 )+
I( city* race* emp* edu^2* exp^2 )+
I( edu* city* race* emp* edu^2* exp^2 )+
I( exp* city* race* emp* edu^2* exp^2 )+
I( edu* exp* city* race* emp* edu^2* exp^2 )+
I( reg* race* emp* edu^2* exp^2 )+
I( edu* reg* race* emp* edu^2* exp^2 )+
I( exp* reg* race* emp* edu^2* exp^2 )+
I( edu* exp* reg* race* emp* edu^2* exp^2 )+
I( city* reg* race* emp* edu^2* exp^2 )+
I( edu* city* reg* race* emp* edu^2* exp^2 )+
I( exp* city* reg* race* emp* edu^2* exp^2 )+
I( edu* exp* city* reg* race* emp* edu^2* exp^2 )+
I( deg* emp* edu^2* exp^2 )+
I( edu* deg* emp* edu^2* exp^2 )+
I( exp* deg* emp* edu^2* exp^2 )+
I( edu* exp* deg* emp* edu^2* exp^2 )+
I( city* deg* emp* edu^2* exp^2 )+
I( edu* city* deg* emp* edu^2* exp^2 )+
I( exp* city* deg* emp* edu^2* exp^2 )+
I( edu* exp* city* deg* emp* edu^2* exp^2 )+
I( reg* deg* emp* edu^2* exp^2 )+
I( edu* reg* deg* emp* edu^2* exp^2 )+
I( exp* reg* deg* emp* edu^2* exp^2 )+
I( edu* exp* reg* deg* emp* edu^2* exp^2 )+
I( city* reg* deg* emp* edu^2* exp^2 )+
I( edu* city* reg* deg* emp* edu^2* exp^2 )+
I( exp* city* reg* deg* emp* edu^2* exp^2 )+
I( edu* exp* city* reg* deg* emp* edu^2* exp^2 )+
I( race* deg* emp* edu^2* exp^2 )+
I( edu* race* deg* emp* edu^2* exp^2 )+
I( exp* race* deg* emp* edu^2* exp^2 )+
I( edu* exp* race* deg* emp* edu^2* exp^2 )+
I( city* race* deg* emp* edu^2* exp^2 )+
I( edu* city* race* deg* emp* edu^2* exp^2 )+
I( exp* city* race* deg* emp* edu^2* exp^2 )+
I( edu* exp* city* race* deg* emp* edu^2* exp^2 )+
I( reg* race* deg* emp* edu^2* exp^2 )+
I( edu* reg* race* deg* emp* edu^2* exp^2 )+
I( exp* reg* race* deg* emp* edu^2* exp^2 )+
I( edu* exp* reg* race* deg* emp* edu^2* exp^2 )+
I( city* reg* race* deg* emp* edu^2* exp^2 )+
I( edu* city* reg* race* deg* emp* edu^2* exp^2 )+
I( exp* city* reg* race* deg* emp* edu^2* exp^2 )+
I( edu* exp* city* reg* race* deg* emp* edu^2* exp^2 )+
I( com* emp* edu^2* exp^2 )+
I( edu* com* emp* edu^2* exp^2 )+
I( exp* com* emp* edu^2* exp^2 )+
I( edu* exp* com* emp* edu^2* exp^2 )+
I( city* com* emp* edu^2* exp^2 )+
I( edu* city* com* emp* edu^2* exp^2 )+
I( exp* city* com* emp* edu^2* exp^2 )+
I( edu* exp* city* com* emp* edu^2* exp^2 )+
I( reg* com* emp* edu^2* exp^2 )+
I( edu* reg* com* emp* edu^2* exp^2 )+
I( exp* reg* com* emp* edu^2* exp^2 )+
I( edu* exp* reg* com* emp* edu^2* exp^2 )+
I( city* reg* com* emp* edu^2* exp^2 )+
I( edu* city* reg* com* emp* edu^2* exp^2 )+
I( exp* city* reg* com* emp* edu^2* exp^2 )+
I( edu* exp* city* reg* com* emp* edu^2* exp^2 )+
I( race* com* emp* edu^2* exp^2 )+
I( edu* race* com* emp* edu^2* exp^2 )+
I( exp* race* com* emp* edu^2* exp^2 )+
I( edu* exp* race* com* emp* edu^2* exp^2 )+
I( city* race* com* emp* edu^2* exp^2 )+
I( edu* city* race* com* emp* edu^2* exp^2 )+
I( exp* city* race* com* emp* edu^2* exp^2 )+
I( edu* exp* city* race* com* emp* edu^2* exp^2 )+
I( reg* race* com* emp* edu^2* exp^2 )+
I( edu* reg* race* com* emp* edu^2* exp^2 )+
I( exp* reg* race* com* emp* edu^2* exp^2 )+
I( edu* exp* reg* race* com* emp* edu^2* exp^2 )+
I( city* reg* race* com* emp* edu^2* exp^2 )+
I( edu* city* reg* race* com* emp* edu^2* exp^2 )+
I( exp* city* reg* race* com* emp* edu^2* exp^2 )+
I( edu* exp* city* reg* race* com* emp* edu^2* exp^2 )+
I( deg* com* emp* edu^2* exp^2 )+
I( edu* deg* com* emp* edu^2* exp^2 )+
I( exp* deg* com* emp* edu^2* exp^2 )+
I( edu* exp* deg* com* emp* edu^2* exp^2 )+
I( city* deg* com* emp* edu^2* exp^2 )+
I( edu* city* deg* com* emp* edu^2* exp^2 )+
I( exp* city* deg* com* emp* edu^2* exp^2 )+
I( edu* exp* city* deg* com* emp* edu^2* exp^2 )+
I( reg* deg* com* emp* edu^2* exp^2 )+
I( edu* reg* deg* com* emp* edu^2* exp^2 )+
I( exp* reg* deg* com* emp* edu^2* exp^2 )+
I( edu* exp* reg* deg* com* emp* edu^2* exp^2 )+
I( city* reg* deg* com* emp* edu^2* exp^2 )+
I( edu* city* reg* deg* com* emp* edu^2* exp^2 )+
I( exp* city* reg* deg* com* emp* edu^2* exp^2 )+
I( edu* exp* city* reg* deg* com* emp* edu^2* exp^2 )+
I( race* deg* com* emp* edu^2* exp^2 )+
I( edu* race* deg* com* emp* edu^2* exp^2 )+
I( exp* race* deg* com* emp* edu^2* exp^2 )+
I( edu* exp* race* deg* com* emp* edu^2* exp^2 )+
I( city* race* deg* com* emp* edu^2* exp^2 )+
I( edu* city* race* deg* com* emp* edu^2* exp^2 )+
I( exp* city* race* deg* com* emp* edu^2* exp^2 )+
I( edu* exp* city* race* deg* com* emp* edu^2* exp^2 )+
I( reg* race* deg* com* emp* edu^2* exp^2 )+
I( edu* reg* race* deg* com* emp* edu^2* exp^2 )+
I( exp* reg* race* deg* com* emp* edu^2* exp^2 )+
I( edu* exp* reg* race* deg* com* emp* edu^2* exp^2 )+
I( city* reg* race* deg* com* emp* edu^2* exp^2 )+
I( edu* city* reg* race* deg* com* emp* edu^2* exp^2 )+
I( exp* city* reg* race* deg* com* emp* edu^2* exp^2 )+
I( edu* exp* city* reg* race* deg* com* emp* edu^2* exp^2 ), data = data))
step(min.model,scope = full.model, direction = c("forward"))
summary(lm(formula = log(wage) ~ I(edu^2) + exp + I(exp^2) + city + race +
reg + emp + edu + exp:edu + city:edu + city:reg + reg:edu +
exp:city + exp:reg + race:emp + city:race, data = data))
summary(lm(formula = log(wage) ~ I(edu^2) + exp + I(exp^2) + city + race +
# emp + reg + deg + edu + city:reg + exp:city + exp:reg + exp:emp +
# city:deg + exp:deg + race:emp + race:deg + reg:deg + city:edu +
# exp:edu + reg:edu + exp:race + race:edu + emp:edu + exp:city:edu +
# city:reg:edu + race:emp:edu + exp:race:edu, data = data))
)
summary(lm(formula = log(wage) ~ I(edu^2) + exp + I(exp^2) + city + race +
emp + reg + deg + edu + city:reg + exp:city + exp:reg + exp:emp +
city:deg + exp:deg + race:emp + race:deg + reg:deg + city:edu +
exp:edu + reg:edu + exp:race + race:edu + emp:edu + exp:city:edu +
city:reg:edu + race:emp:edu + exp:race:edu, data = data))
?summary
summary(lm(formula = log(wage) ~ I(edu^2) + exp + I(exp^2) + city + race +
reg + emp + edu + exp:edu + city:edu + exp:reg + city:reg +
reg:edu + exp:city + race:emp + city:race, data = data))
model <- lm(formula = log(wage) ~ I(edu^2) + exp + I(exp^2) + city + race +
reg + emp + edu + exp:edu + city:edu + exp:reg + city:reg +
reg:edu + exp:city + race:emp + city:race, data = data)
summary(model)
summary(lm(formula = log(wage) ~ I(edu^2) + exp + I(exp^2) + city + race +
emp + reg + deg + edu + city:reg + exp:city + exp:reg + exp:emp +
city:deg + exp:deg + race:emp + race:deg + reg:deg + city:edu +
exp:edu + reg:edu + exp:race + race:edu + emp:edu + exp:city:edu +
city:reg:edu + race:emp:edu + exp:race:edu, data = data))$adj.r.squared
summary(lm(formula = log(wage) ~ I(edu^2) + exp + I(exp^2) + city + race +
reg + emp + edu + exp:edu + city:edu + exp:reg + city:reg +
reg:edu + exp:city + race:emp + city:race, data = data))
summary(lm(formula = log(wage) ~ I(edu^2) + exp + I(exp^2) + city + race +
reg + emp + edu  + city:edu + exp:reg + city:reg +
reg:edu + exp:city + race:emp + city:race, data = data))
summary(lm(formula = log(wage) ~ I(edu^2) + exp + I(exp^2) + city + race +
reg + emp + edu + exp:edu + city:edu + exp:reg + city:reg +
reg:edu + exp:city + race:emp, data = data))
summary(lm(formula = log(wage) ~ I(edu^2) + exp + I(exp^2) + city + race +
reg + emp + edu + exp:edu + city:edu + exp:reg + city:reg +
reg:edu + exp:city + race:emp + city:race+deg:edu, data = data))
summary(lm(formula = log(wage) ~ I(edu^2) + exp + I(exp^2) + city + race +
reg + emp + edu + exp:edu + city:edu + exp:reg + city:reg +
reg:edu + exp:city + race:emp + city:race, data = data))
summary(lm(formula = log(wage) ~ I(edu^2) + exp + I(exp^2) + city + race +
reg + emp + edu + exp:edu + city:edu + exp:reg + city:reg +
reg:edu + exp:city + race:emp + city:race+deg:edu, data = data))
?attach
attach(df)
plot(data$edu,log(wage),col=data$deg)
attach(df)
attach(data)
model <- lm(formula = log(wage) ~ I(edu^2) + exp + I(exp^2) + city + race +
reg + emp + edu + exp:edu + city:edu + exp:reg + city:reg +
reg:edu + exp:city + race:emp + city:race, edu:deg, data = data)
summary(model)
p <- 16
n <- length(data)
#dffits(model)
plot(dffits(model), ylim=c(-0.5,0.5))
abline(h=2*sqrt(p/n), col=2)
abline(h=2*sqrt(p/n), col=2)
abline(h=-2*sqrt(p/n), col=2)
# 34%
#summary(lm(log(wage)~edu+I(edu^2)+exp+I(exp^2)+city+reg+race+deg+com,data=train.data))
#35%
#summary(lm(log(wage)~edu+I(edu^2)+exp+I(exp^2)+city+city*exp*edu+reg+race+deg+com,data=train.data))
#35.26%
#summary(lm(log(wage)~edu+I(edu^2)+exp+I(exp^2)+city+city*edu*exp*deg+reg*city+reg*exp*edu*deg+race*exp*edu*deg*city+reg+race+deg+com,data=train.data))
#35.38
model <- lm(formula = log(wage) ~ I(edu^2) + exp + I(exp^2) + city + race +
reg + emp + edu + exp:edu + city:edu + exp:reg + city:reg +
reg:edu + exp:city + race:emp + city:race, edu:deg, data = data)
summary(model)
p <- 16
n <- length(data)
#dffits(model)
plot(dffits(model), ylim=c(-0.4,0.4))
abline(h=2*sqrt(p/n), col=2)
abline(h=-2*sqrt(p/n), col=2)
str(data)
model <- lm(formula = log(wage) ~ I(edu^2) + exp + I(exp^2) + city + race +
reg + emp + edu + exp:edu + city:edu + exp:reg + city:reg +
reg:edu + exp:city + race:emp + city:race, edu:deg, data = data)
str(data)
model <- lm(formula = log(wage) ~ I(edu^2) + exp + I(exp^2) + city + race +
reg + emp + edu + exp:edu + city:edu + exp:reg + city:reg +
reg:edu + exp:city + race:emp + city:race, deg:edu, data = data)
model <- lm(formula = log(wage) ~ I(edu^2) + exp + I(exp^2) + city + race +
reg + emp + edu + exp:edu + city:edu + exp:reg + city:reg +
reg:edu + exp:city + race:emp + city:race, data = data)
par(mfrow=c(2,3))
exp <- data$exp
edu <- data$edu
city <- data$city
race <- data$race
reg <- data$reg
emp <- data$emp
wage <- data$wage
# City vs. region (yes)
interaction.plot(city,reg,log(wage))
# race vs. region- lines cross
interaction.plot(race,reg,log(wage))
# race vs. city- slightly different slopes (included)
interaction.plot(race,city,log(wage))
# edu vs.degree (the lines do cross)
plot(data$edu,log(wage),col=data$deg)
degree <- data$deg=="yes"
abline(lm(log(wage)[degree]~data$edu[degree]),col="red")
abline(lm(log(wage)[-degree]~data$edu[-degree]),col="black")
# exp vs. race (the lines do cross)
interaction.plot(race, exp, log(wage))
#exp:edu
#interaction.plot(exp, edu, log(wage))
#city:edu
interaction.plot(city, edu, log(wage))
#exp:reg
interaction.plot(reg, exp, log(wage))
#reg:edu
interaction.plot(reg, edu, log(wage))
#exp:city
interaction.plot(city, exp, log(wage))
# race:emp
interaction.plot(race, emp, log(wage))
head(diffits(model))
head(dffits(model))
str(dffits(model))
dfbetas(model)
plot(dfbetas(model), ylim=c(-0.4,0.4))
dfbetas(model)[,2]
head(dfbetas(model)[,2])
str(dfbetas(model)[,2])
plot(defbetas(model)[,2], ylim=(-1,1))
plot(defbetas(model)[,2], ylim=c(-1,1))
plot(dfbetas(model)[,2], ylim=c(-1,1))
abline(h=2*sqrt(n), col=2)
abline(h=-2*sqrt(n), col=2)
ggplot(data, aes(x = dfbetas(model)[,2])) +
geom_dotplot()
library(tidyverse)
ggplot(data, aes(x = dfbetas(model)[,2])) +
geom_dotplot()
ggplot(data, aes(x = x, y = dfbetas(model)[,2])) +
geom_point()
length(data)
nrow(data)
x <- nrow(data)
ggplot(data, aes(x = x, y = dfbetas(model)[,2])) +
geom_point()
x <- seq(1, length(data))
ggplot(data, aes(x = x, y = dfbetas(model)[,2])) +
geom_point()
length(dfbetas(model)[,2])
x
x <- seq(1, length(data))
x <- seq(1, nrow(data))
ggplot(data, aes(x = x, y = dfbetas(model)[,2])) +
geom_point()
?abline
?geom_hline
ggplot(data, aes(x =x, y = dfbetas(model)[,2])) +
geom_point()
2*sqrt(n)
n <- nrow(data)
2*sqrt(n)
2/sqrt(n)
ggplot(data, aes(x =x, y = dfbetas(model)[,6])) +
geom_point() +
geom_hline(aes(yintercept = 2/sqrt(n)), col= "red") +
geom_hline(aes(yintercept = -2/sqrt(n)), col = "red")
dfplot2 <-ggplot(data, aes(x =x, y = dfbetas(model)[,3])) +
geom_point() +
geom_hline(aes(yintercept = y.intc, col= "red") +
geom_hline(aes(yintercept = -y.intc, col = "red")
dfplot1 <- ggplot(data, aes(x =x, y = dfbetas(model)[,2])) +
dfplot1 <- ggplot(data, aes(x =x, y = dfbetas(model)[,2])) +
geom_point() +
geom_hline(aes(yintercept = y.intc, col= "red")) +
geom_hline(aes(yintercept = -y.intc, col = "red"))
dfplot1
x <- seq(1, nrow=data)
y.intc <- 2/sqrt(n)
x
str(data)
nrow(data)
x <- seq(1, nrow(data))
y.intc <- 2/sqrt(n)
dfplot1 <- ggplot(data, aes(x =x, y = dfbetas(model)[,2])) +
geom_point() +
geom_hline(aes(yintercept = y.intc, col= "red")) +
geom_hline(aes(yintercept = -y.intc, col = "red"))
dfplot1
exp <- I(data$exp)
edu <- I(data$edu)
city <- I(data$city)
race <- I(data$race)
reg <- I(data$reg)
emp <- I(data$emp)
wage <- I(data$wage)
edu.sq <- I(edu^2)
exp.sq <- I(exp^2)
exp.edu <- I(exp*edu)
city.edu <- I(city*edu)
exp.reg <- I(exp*reg)
city.reg <- I(city*reg)
?as.numeric
exp.edu <- I(exp*edu)
city.edu <- I(as.numeric(city)*edu)
exp.reg <- I(exp*as.numeric(reg))
city.reg <- I(as.numeric(city)*as.numeric(reg))
reg.edu <- I(as.numeric(reg)*edu)
exp.city <- I(exp*as.numeric(city))
race.emp <- I(as.numeric(race)*emp)
city.race <- I(as.numeric(city)*as.numeric(race))
model.df <- data.frame(city, race , reg , emp , edu,  exp.edu,
city.edu,
exp.reg,
city.reg,
reg.edu,
exp.city,
race.emp,
city.race, log(wage))
bestglm(model.df, Ic="AIC")
library(bestglm)
bestglm(model.df, Ic="AIC")
bestglm(model.df, Ic="BIC")
warning()
warnings()
x <- seq(1, nrow(data))
y.intc <- 2/sqrt(n)
dfplot1 <- ggplot(data, aes(x =x, y = dfbetas(model)[,2])) +
geom_point() +
geom_hline(aes(yintercept = y.intc, col= "red")) +
geom_hline(aes(yintercept = -y.intc, col = "red"))
dfplot1
