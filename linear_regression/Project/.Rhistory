install.packages("rmarkdown")
?size
?length
?plot
d <- read.table("salary.txt", sep="," , header=TRUE)
setwd(/r/linear_regression/Project)
setwd(r/linear_regression/Project)
setwd(rmk2160/r/linear_regression/Project)
setwd("~/")
setwd("~/r/linear_regression/Project")
d <- read.table("salary.txt", sep="," , header=TRUE)
names(d)
dim(d)
d$wage
?plot
abline?
รง
?abline
View(d)
View(d)
d$race
black <- (d$race == black)
black <- (d$race == "black")
black
dfram <- data.frame(Wage = d$wage, Edu = d$edu, Exp = d$exp, City = d$city, Region = d$reg, Race = d$race, College = d$deg, Commute = d$com, Employees = d$emp)
dfram[[Wage]]
dfram[["Wage"]]
dfram[["Race"]]
dfram[["Race" = "black"]]
dfram[1]
head(dfram[1])
if (dfram[["Race"]] == "black"
)
d
?predict
data()
data("Nile")
mena(Nile)
nile <- data("Nile")
nile
mean(Nile)
hist(Nile)
data("presidents")
hist(presidents)
presidents
head(presidents)
header(presidents)
head(Nile)
print(Nile)
size(Nile)
length(Nile)
print(presidents)
presidents
example(lm)
??"conditional"
?mvnorm
?mvrnorm
?mvrnorm
??mvrnorm
help(package=MASS)
?files
?subset
example(subset)
dfram[dfram$Race == "black"]
black <- dfram$Race == "black"
black
subset(dfram, Race == "black")
black <- subset(dfram, Race == "black")
white <- subset(dfram, Race=="white")
nonblack <- subset(dfram, Race=="white" or "other")
nonblack <- subset(dfram, Race != "black")
#Define data sets.  Notice that at least one group has more than one observation for fixed x.
x <- c(2,2,2,4,4,5,5,5,8,10,10,10,10)
y <- c(1.9,2.1,2.2,2.4,3,3.1,3.6,3.5,3.5,2.3,2.3,3.3,3)
#Define n and c
n <- length(y)
c <- 5
par(mfrow=c(1,1))
#Create a scatter plot with the group means
plot(x,y,main="F-lack of Fit Test")
means <- c(mean(y[which(x==2)]),mean(y[which(x==4)]),mean(y[which(x==5)]),mean(y[which(x==8)]),mean(y[which(x==10)]))
points(c(2,4,5,8,10),means,col=2,pch=17)
lines(c(2,4,5,8,10),means,col=2,lty=2)
abline(lm(y~x))
legend("topleft",legend=c("Group Means","Raw Data"),pch=c(17,1),col=c(2,1))
###################
#F Lack-of-fit test
###################
#Calculate reduced SSE
sse.R <- anova(lm(y~x))[[2]][2]
#Calculate full SSE
fac.x <- factor(x)
sse.F <- anova(lm(y~fac.x))[[2]][2]
#Construct F-stat
f.calc <- ((sse.R-sse.F)/(c-2))/(sse.F/(n-c))
f.calc
#Find P-value
1-pf(f.calc,c-2,n-c)
length(black)
black
length(black)
?size
?length
?obs
nrow(black)
nrow(white)
?boxplot
