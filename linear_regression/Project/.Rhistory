install.packages("rmarkdown")
?size
?length
?plot
d <- read.table("salary.txt", sep="," , header=TRUE)
setwd(/r/linear_regression/Project)
setwd(r/linear_regression/Project)
setwd(rmk2160/r/linear_regression/Project)
setwd("~/")
setwd("~/r/linear_regression/Project")
d <- read.table("salary.txt", sep="," , header=TRUE)
names(d)
dim(d)
d$wage
?plot
abline?
รง
?abline
View(d)
View(d)
d$race
black <- (d$race == black)
black <- (d$race == "black")
black
dfram <- data.frame(Wage = d$wage, Edu = d$edu, Exp = d$exp, City = d$city, Region = d$reg, Race = d$race, College = d$deg, Commute = d$com, Employees = d$emp)
dfram[[Wage]]
dfram[["Wage"]]
dfram[["Race"]]
dfram[["Race" = "black"]]
dfram[1]
head(dfram[1])
if (dfram[["Race"]] == "black"
)
d
?predict
data()
data("Nile")
mena(Nile)
nile <- data("Nile")
nile
mean(Nile)
hist(Nile)
data("presidents")
hist(presidents)
presidents
head(presidents)
header(presidents)
head(Nile)
print(Nile)
size(Nile)
length(Nile)
print(presidents)
presidents
example(lm)
??"conditional"
?mvnorm
?mvrnorm
?mvrnorm
??mvrnorm
help(package=MASS)
?files
?subset
example(subset)
dfram[dfram$Race == "black"]
black <- dfram$Race == "black"
black
subset(dfram, Race == "black")
black <- subset(dfram, Race == "black")
white <- subset(dfram, Race=="white")
nonblack <- subset(dfram, Race=="white" or "other")
nonblack <- subset(dfram, Race != "black")
#Define data sets.  Notice that at least one group has more than one observation for fixed x.
x <- c(2,2,2,4,4,5,5,5,8,10,10,10,10)
y <- c(1.9,2.1,2.2,2.4,3,3.1,3.6,3.5,3.5,2.3,2.3,3.3,3)
#Define n and c
n <- length(y)
c <- 5
par(mfrow=c(1,1))
#Create a scatter plot with the group means
plot(x,y,main="F-lack of Fit Test")
means <- c(mean(y[which(x==2)]),mean(y[which(x==4)]),mean(y[which(x==5)]),mean(y[which(x==8)]),mean(y[which(x==10)]))
points(c(2,4,5,8,10),means,col=2,pch=17)
lines(c(2,4,5,8,10),means,col=2,lty=2)
abline(lm(y~x))
legend("topleft",legend=c("Group Means","Raw Data"),pch=c(17,1),col=c(2,1))
###################
#F Lack-of-fit test
###################
#Calculate reduced SSE
sse.R <- anova(lm(y~x))[[2]][2]
#Calculate full SSE
fac.x <- factor(x)
sse.F <- anova(lm(y~fac.x))[[2]][2]
#Construct F-stat
f.calc <- ((sse.R-sse.F)/(c-2))/(sse.F/(n-c))
f.calc
#Find P-value
1-pf(f.calc,c-2,n-c)
length(black)
black
length(black)
?size
?length
?obs
nrow(black)
nrow(white)
?boxplot
install.packages("tidyverse")
library(tidyverse)
df <- read.csv("salary.txt",header=T)
head(df)
str(df)
# Pick trainging and test data
# Use sample
# Set seed to 0
set.seed(0)
index <- sample(1:nrow(df),4965,replace = F)
index
train.data <- df[-index,]
df <- read.csv("salary.txt",header=T)
# Pick trainging and test data
# Use sample
# Set seed to 0
set.seed(0)
index <- sample(1:nrow(df),4965,replace = F)
train.data <- df[-index,]
data <- train.data
test.data <- df[index,]
# Quality control check
sum(train.data$race=="black")/nrow(data)
sum(test.data$race=="black")/nrow(test.data)
# Rough model 1
summary(lm(wage~edu+exp+city+reg+race+deg+com,data=train.data))
?pairs
pairs(df)
pairs(test.data)
pairs(train.data)
train.data[sample(nrow(train.data), 50)]
train.data[sample(nrow(train.data), 50), ]
samp <- train.data[sample(nrow(train.data), 50), ]
head(samp)
pairs(samp)
samp <-train.data[sample(nrow(train.data), 100
), ]
pairs(samp)
corr(samp)
?cor
?corr
cor(samp)
library(tidyverse)
ggplot(train.data, aes(x = edu, wage))+
ggplot(train.data, aes(x = edu, y = wage, group = race))+
geom_smooth()
ggplot(train.data, aes(x = edu, y = wage, group = race, color = race))+
geom_smooth()
ggplot(train.data, aes(x = exp(), y = wage, group = race, color = race))+
ggplot(train.data, aes(x = exp, y = wage, group = race, color = race))+
geom_smooth(alph = 0.4)
ggplot(train.data, aes(x = exp, y = wage, group = race, color = race))+
geom_smooth(alpha = 0.4)
ggplot(train.data, aes(x = exp, y = wage, group = race, color = race))+
geom_smooth(alpha = 0.4)+
geom_point()
ggplot(train.data, aes(x = exp, y = wage, group = race, color = race))+
geom_point()
ggplot(train.data, aes(x = exp, y = wage, group = race, color = race))+
geom_point()+
geom_smooth()
ggplot(train.data, aes(x = exp, y = wage, group = race, color = race))+
geom_jitter()
ggplot(train.data, aes(x = exp, y = wage, group = race, color = race))+
geom_smooth(alpha = 0.3)
ggplot(train.data, aes(x = exp*edu, y = wage, group = race, color = race))+
geom_smooth()
interaction.plot(race, edu)
interaction.plot(df$race, df$edu)
summary(lm(wage~edu+exp+city+reg+race+deg+com,data=train.data))
# Rough model 2
summary(lm(log(wage)~edu+exp+city+reg+race+deg+com,data=train.data))
summary(lm(log(wage)~edu+edu^2+exp+city+reg+race+deg+com,data=train.data))
summary(lm(log(wage)~edu))
summary(lm(log(wage)~edu, data = train.data))
summary(lm(log(wage)~edu+edu^2, data = train.data))
summary(lm(log(wage)~edu+I(edu^2), data = train.data))
?lm
edu_sq <- (df$edu)^2
head(df)
summary(lm(log(wage)~edu, data = train.data))
summary(lm(log(wage)~edu+I(edu^2), data = train.data))
summary(lm(log(wage)~edu, data = df))
summary(lm(log(wage)~edu+I(edu^2), data = df))
summary(lm(log(wage)~edu+edu_sq, data = df))
summary(lm(log(wage)~edu+edu^2, data = df))
summary(lm(wage~edu+I(edu^2)+exp+I(exp^2)+city+reg+race+deg+com,data=train.data))
summary(lm(log(wage)~edu+I(edu^2)+exp+I(exp^2)+city+reg+race+deg+com,data=train.data))
summary(lm(log(wage)~edu+I(edu^2)+exp+city+reg+race+deg+com,data=train.data))
summary(lm(log(wage)~edu+I(edu^2)+exp+I(exp^2)+city+reg+race+deg+com,data=train.data))
summary(lm(log(wage)~edu+I(edu^2)+exp+I(exp^2)+city+race+deg+com,data=train.data))
summary(lm(log(wage)~edu+I(edu^2)+exp+I(exp^2)+city+reg+race+deg,data=train.data))
summary(lm(log(wage)~edu+I(edu^2)+exp+I(exp^2)+city+I(city^2)+reg+race+deg,data=train.data))
plot(data$com,log(data$wage))
?plot
plot(data$com,log(data$wage))
lines(supsmu(data$com,log(data$wage)),col=2)
?supsmu
plot(data$com,log(data$wage))
lines(data$com, log(data$wage), col=2)
plot(data$com,log(data$wage))
?lines
lines(data$com, log(data$wage)), col=2)
plot(data$com,log(data$wage))
lines(supsmu(data$com,log(data$wage)),col=2)
?supsmu
##### edu
plot(data$edu,log(data$wage))
lines(supsmu(data$edu,log(data$wage)),col=2)
ggplot(data, aes(x = edu, y = log(wage)))+
geom_point()
ggplot(data, aes(x = edu, y = log(wage)))+
geom_point()+
geom_line()
ggplot(data, aes(x = edu, y = log(wage)))+
geom_point()+
geom_smooth()
ggplot(data, aes(x = com, y = log(wage)))+
geom_point()+geom_smooth()
?geom_smooth
##### edu
boxplot(log(data$wage)~data$edu)
lines(supsmu(data$edu,log(data$wage)),col=2)
?boxplot
ggplot(data, aes(x = edu, y = log(wage)))+
geom_boxplot()
ggplot(data, aes(x = edu, y = log(wage)))+
geom_boxplot(group = 1)
ggplot(data, aes(x = edu, y = log(wage)))+
ggplot(data, aes(x = edu, y = log(wage), group = edu) )+
geom_boxplot()
ggplot(data, aes(x = edu, y = log(wage), group = edu) )+
geom_boxplot()+
geom_smooth()
ggplot(data)+
geom_boxplot(aes(x = edu, y = log(wage), group = edu))+
geom_smooth(aes(x = edu, y = log(wage)))
boxplot(log(data$wage)~data$edu)
lines(supsmu(data$edu,log(data$wage)),col=2)
##### exp
plot(data$exp,log(data$wage))
lines(supsmu(data$exp,log(data$wage)),col=2)
ggplot(data, aes(x = exp , y = log(wage)))+
geom_point()+geom_smooth()
##### emp
plot(data$emp,log(data$wage))
lines(supsmu(data$emp,log(data$wage)),col=2)
ggplot(data, aes(x = emp, y = log(wage)))+
geom_point()+geom_smooth()
#### Interaction plots
# City vs. region (yes)
city <- data$city
reg <- data$reg
wage <- data$wage
interaction.plot(city,reg,log(wage))
summary(lm(log(wage)~edu+I(edu^2)+exp+I(exp^2)+city+reg+race+deg+com,data=train.data))
summary(lm(log(wage)~edu+I(edu^2)+exp+I(exp^2)+city+city*exp+reg+race+deg+com,data=train.data))
summary(lm(log(wage)~edu+I(edu^2)+exp+I(exp^2)+city+city*exp*edu+reg+race+deg+com,data=train.data))
summary(lm(log(wage)~edu+I(edu^2)+exp+I(exp^2)+city+city*edu+reg+race+deg+com,data=train.data))
summary(lm(log(wage)~edu+I(edu^2)+exp+I(exp^2)+city+city*edu*exp+reg*exp+reg+race+deg+com,data=train.data))
summary(lm(log(wage)~edu+I(edu^2)+exp+I(exp^2)+city+city*edu*exp+reg*exp*edu+reg+race+deg+com,data=train.data))
summary(lm(log(wage)~edu+I(edu^2)+exp+I(exp^2)+city+city*edu*exp*deg+reg*exp*edu+reg+race+deg+com,data=train.data))
summary(lm(log(wage)~edu+I(edu^2)+exp+I(exp^2)+city+city*edu*exp*deg+reg*exp*edu*deg+reg+race+deg+com,data=train.data))
summary(lm(log(wage)~edu+I(edu^2)+exp+I(exp^2)+city+city*edu*exp*deg+reg*exp*edu*deg+race*exp+reg+race+deg+com,data=train.data))
summary(lm(log(wage)~edu+I(edu^2)+exp+I(exp^2)+city+city*edu*exp*deg+reg*exp*edu*deg+race*exp*edu+reg+race+deg+com,data=train.data))
summary(lm(log(wage)~edu+I(edu^2)+exp+I(exp^2)+city+city*edu*exp*deg+reg*exp*edu*deg+race*exp*edu*deg*city+reg+race+deg+com,data=train.data))
summary(lm(log(wage)~edu+I(log(edu))+exp+I(exp^2)+city+reg+race+deg+com,data=train.data))
summary(lm(log(wage)~edu+log(edu)+exp+I(exp^2)+city+reg+race+deg+com,data=train.data))
summary(lm(log(wage)~edu+I(edu^2)+exp+I(exp^2)+city+city*edu*exp*deg+reg*exp*edu*deg+race*exp*edu*deg*city+reg+race+deg+com,data=train.data))
summary(lm(log(wage)~edu+I(edu^2)+exp+I(exp^2)+city+city*edu*exp*deg+reg*city+reg*exp*edu*deg+race*exp*edu*deg*city+reg+race+deg+com,data=train.data))
summary(lm(log(wage)~edu+I(edu^2)+exp+I(exp^2)+city+city*edu*exp*deg+reg*city+reg*exp*edu*deg+race*exp*edu*deg*city+reg+race+deg,data=train.data))
interaction.plot(city,reg,log(wage))
# race vs. city (maybe not)
race <- data$race
interaction.plot(race,reg,log(wage))
# race vs. city (maybe not)
interaction.plot(race,city,log(wage))
install.packages("rmarkdown")
(df %>% filter(race == "white" , reg =="midwest"))
nrow((df %>% filter(race == "white" , reg =="midwest")))
ggplot(df)+
geom_bar(stat = "identity", aes(x = reg, y = wage, fill = race), position = "dodge")
ggplot(df)+
geom_bar(aes(x = reg, y = wage, fill = race), position = "dodge")
ggplot(df)+
geom_bar(stat = "identity", aes(x = reg, y = wage, fill = race))
ggplot(df)+
geom_bar(stat = "identity", aes(x = reg, y = wage, fill = race), position = "dodge")
ggplot(df)+
geom_point(aes(x = reg, y = wage, color = race))
ggplot(df)+
geom_boxplot(aes(x = reg, y = wage, color = race))
ggplot(df)+
geom_boxplot(aes(x = reg, y = log(wage), color = race))
ggplot(df)+
geom_boxplot(aes(x = city, y = log(wage), color = race))
ggplot(df)+
geom_boxplot(aes(x = deg, y = log(wage), color = race))
ggplot(df)+
# edu vs.degree (the lines do cross)
plot(data$edu,log(wage),col=data$deg)
degree <- data$deg=="yes"
abline(lm(log(wage)[degree]~data$edu[degree]),col="red")
log(wage)[degree]
head(log(wage)[degree])
head(log(wage))
nrow(log(wage)[degree])
length(log(wage)[degree])
length(log(wage))
length(log(wage)[-degree])
head(log(wage)[-degree])
length(log(wage))
head(log(wage))
head(log(wage)[race])
length(log(wage)[race])
length(log(wage)[-race])
length(-degree)
length(degree)
abline(lm(log(wage)[-degree]~data$edu[-degree]),col="black")
head(degree)
head(-degree)
length(degree == T)
length(degree == F)
length(degree == 0)
length(degree == 1)
# exp vs. race (the lines do cross)
plot(data$exp,log(wage),col=data$race)
plot(data$exp,log(wage))
black <- data$race=="black"
white <- data$race=="white"
other <- data$race=="other"
lines(supsmu(data$exp[black],log(data$wage)[black]),col=2)
lines(supsmu(data$exp[white],log(data$wage)[white]),col=3)
lines(supsmu(data$exp[other],log(data$wage)[other]),col=4)
legend("topright",legend=c("Black","White","Other"),col=c(2,3,4),lty=c(1,1,1))
ggplot(data, aes(x = exp, y = log(wage))) +
ggplot(data, aes(x = exp, y = log(wage), group = race)) +
geom_point()
ggplot(data, aes(x = exp, y = log(wage), group = race)) +
geom_point()+
geom_smooth()
ggplot(data, aes(x = exp, y = log(wage), group = race, color = race)) +
geom_point()
ggplot(data, aes(x = exp, y = log(wage), group = race, color = race)) +
geom_point()+
geom_smooth()
ggplot(data, aes(x = exp, y = log(wage), group = race, color = race)) +
geom_smooth()
ggplot(data, aes(x = exp, y = log(wage), group = race, color = race)) +
geom_smooth()
ggplot(data, aes(x = exp, y = log(wage), group = race, color = race)) +
geom_point(color = "black")+
geom_smooth()
ggplot(data, aes(x = exp, y = log(wage), group = race, color = race)) +
geom_smooth()
# Defining indicators (dummy variables)
black <- I(data$race=="black")
white <- I(data$race=="white")
other <- I(data$race=="other")
y=c(6.1,7.1,7.4,6.3,6.5,5.7,6.6,8.1,6.3,6.9)
x1=c(22.8,28.7,29.7,18.3,21.1,21.2,22.2,22.3,21.8,31.2)
x2=c(43,55.3,48.5,38.8,46.2,39.9,43.1,48.5,40,56.7)
x3=c(23.8,24.8,23.9,16.6,19.6,21.4,20.7,21.8,20.6,25.2)
x4=c(9.2,12.0,10.4,9.8,9.8,7.7,10.9,5.5,11.6,11.6)
x5=c(6,10,5,4,5,6,7,5,7,9)
n=length(y)
n
##################################################
#Model Selection Criteria (page 158 in the notes)
##################################################
interaction.plot(city,reg,log(wage))
?interaction.plot
summary(lm(wage~city+reg+city*reg, data = data))
?pairs
pairs(y)
pairs(y,x1)
pairs(y,x1,x2)
?as.data.frame
mod_data <- as.data.frame(y, x1,x2,x3,x4,x5)
mod_data
mod_data <- as.data.frame(list(y, x1,x2,x3,x4,x5))
mod_data
mod_data <- data.frame(list(y, x1,x2,x3,x4,x5))
mod_data
mod_data <- data.frame(y, x1,x2,x3,x4,x5)
mod_data
pairs(mod_data)
?interaction.plot
interaction.plot(x1,x2,y)
?anova
anova(lm(y~x1))
summary(lm(y~x1))
?ancova
drug <- read.table("Example.23.txt", header=T)
drug <- read.table("Example23.txt", header=T)
?setwd
getwd()
drug <- read.table("Example23.txt", header=T)
str(drug)
pairs(drug)
pairs(drug[c(1,2,5,6)])
cor(drug)
pairs(drug)
pairs(drug[c(1,2,5,6)])
pairs(drug)
pairs(drug[c(1,2,5,6)])
pairs(drug)
pairs(drug[c(1,2,4,5,6)])
pairs(drug[c(1,2,5,6,7)])
pairs(drug[c(1,2,5,6,7,8)])
pairs(drug[c(1,2,5,6,7)])
pairs(drug)
pairs(drug[c(1,2,5,6,7)])
lm(wage~exp+edu+exp*edu, data=data)
summary(lm(wage~exp+edu+exp*edu, data=data)
)
summary(lm(wage~race+edu+race*edu, data=data))
?interaction.plot\
?interaction.plot
anova(> lm(wage~exp+edu+exp*edu, data=data))
anova(lm(wage~exp+edu+exp*edu, data=data))
anova(lm(wage~race+edu+race*edu, data=data))
summary(lm(wage~exp+edu+exp*edu, data=data))
anova(lm(wage~race+edu+race*edu, data=data))
summary(lm(wage~race+edu+race*edu, data=data))
interaction.plot(race, edu, wage, data = data)
edu <- data$edu
interaction(race, edu, wage)
interaction.plot(race, edu, wage)
summary(lm(wage~race+edu+race*edu, data=data))
anova(lm(wage~race+edu+race*edu, data=data))
anova(lm(wage~race+exp+race*exp, data=data))
anova(lm(wage~race+city+race*city, data=data))
anova(lm(wage~race+reg+race*reg, data=data))
str(data)
anova(lm(wage~race+deg+race*deg, data=data))
anova(lm(wage~race+emp+race*emp, data=data))
anova(lm(wage~race+com+race*com, data=data))
install.packages("leaps")
install.packages("bestglm")
library(leaps)
library(bestglm)
min.model <- lm(y~1, data=mod_data)
full.model <- formula(lm(y~x1+x2+x3+x4+x5, data= mod_data))
step(min.model, scope = full.model, direction = c("forward"))
full.model <- formula(lm(log(wage)~edu+I(edu^2)+exp+I(exp^2)+city+reg+race+deg+com,data=train.data))
min.model <- lm(wage~1, data= data)
step(min.model, scope = full.model, direction = c("forward"))
anova(lm(formula = wage ~ I(edu^2) + exp + I(exp^2) + city + race +
reg + deg, data = data))
summary(lm(formula = wage ~ I(edu^2) + exp + I(exp^2) + city + race +
reg + deg, data = data))
summary(lm(formula = wage ~ I(edu^2) + exp + I(exp^2) + exp*edu+ city + race +
reg + deg, data = data))
full.model <- formula(lm(wage~edu+exp+city+reg+race+deg+com,data=train.data))
step(min.model, scope = full.model, direction = c("forward"))
summary(lm(formula = wage ~ edu + exp + city + race + reg + deg, data = data))
str(data)
predictors <- cbind(data$edu, data$exp, data$city, data$reg, data$race, data$deg,data$com,data$emp)
leaps.sub <- leaps(x=predictors, y = data$wage)
plot(leaps.sub$size, leaps.sub$Cp)
lines(leaps.sub$size, leaps.sub$Cp)
select=leaps.sub$Cp==min(leaps.sub$Cp)
select = leaps.sub$which[select,]
predictors[,select]
regsubsets.sub = regsubsets(x=predictors, y = data$wage)
summary(regsubsets.sub, scale = "Cp")
plot(regsubsets.sub, scale="Cp")
summary(regsubsets.sub, scale = "adjr2")
plot(regsubsets.sub, scale="ajdr2")
plot(regsubsets.sub, scale="ajdr")
summary(regsubsets.sub, scale = "adjr2")$adjr
str(data)
