boxplot(log(data$wage)~data$edu)
lines(supsmu(data$edu,log(data$wage)),col=2)
##### exp
plot(data$exp,log(data$wage))
lines(supsmu(data$exp,log(data$wage)),col=2)
ggplot(data, aes(x = exp , y = log(wage)))+
geom_point()+geom_smooth()
##### emp
plot(data$emp,log(data$wage))
lines(supsmu(data$emp,log(data$wage)),col=2)
ggplot(data, aes(x = emp, y = log(wage)))+
geom_point()+geom_smooth()
#### Interaction plots
# City vs. region (yes)
city <- data$city
reg <- data$reg
wage <- data$wage
interaction.plot(city,reg,log(wage))
summary(lm(log(wage)~edu+I(edu^2)+exp+I(exp^2)+city+reg+race+deg+com,data=train.data))
summary(lm(log(wage)~edu+I(edu^2)+exp+I(exp^2)+city+city*exp+reg+race+deg+com,data=train.data))
summary(lm(log(wage)~edu+I(edu^2)+exp+I(exp^2)+city+city*exp*edu+reg+race+deg+com,data=train.data))
summary(lm(log(wage)~edu+I(edu^2)+exp+I(exp^2)+city+city*edu+reg+race+deg+com,data=train.data))
summary(lm(log(wage)~edu+I(edu^2)+exp+I(exp^2)+city+city*edu*exp+reg*exp+reg+race+deg+com,data=train.data))
summary(lm(log(wage)~edu+I(edu^2)+exp+I(exp^2)+city+city*edu*exp+reg*exp*edu+reg+race+deg+com,data=train.data))
summary(lm(log(wage)~edu+I(edu^2)+exp+I(exp^2)+city+city*edu*exp*deg+reg*exp*edu+reg+race+deg+com,data=train.data))
summary(lm(log(wage)~edu+I(edu^2)+exp+I(exp^2)+city+city*edu*exp*deg+reg*exp*edu*deg+reg+race+deg+com,data=train.data))
summary(lm(log(wage)~edu+I(edu^2)+exp+I(exp^2)+city+city*edu*exp*deg+reg*exp*edu*deg+race*exp+reg+race+deg+com,data=train.data))
summary(lm(log(wage)~edu+I(edu^2)+exp+I(exp^2)+city+city*edu*exp*deg+reg*exp*edu*deg+race*exp*edu+reg+race+deg+com,data=train.data))
summary(lm(log(wage)~edu+I(edu^2)+exp+I(exp^2)+city+city*edu*exp*deg+reg*exp*edu*deg+race*exp*edu*deg*city+reg+race+deg+com,data=train.data))
summary(lm(log(wage)~edu+I(log(edu))+exp+I(exp^2)+city+reg+race+deg+com,data=train.data))
summary(lm(log(wage)~edu+log(edu)+exp+I(exp^2)+city+reg+race+deg+com,data=train.data))
summary(lm(log(wage)~edu+I(edu^2)+exp+I(exp^2)+city+city*edu*exp*deg+reg*exp*edu*deg+race*exp*edu*deg*city+reg+race+deg+com,data=train.data))
summary(lm(log(wage)~edu+I(edu^2)+exp+I(exp^2)+city+city*edu*exp*deg+reg*city+reg*exp*edu*deg+race*exp*edu*deg*city+reg+race+deg+com,data=train.data))
summary(lm(log(wage)~edu+I(edu^2)+exp+I(exp^2)+city+city*edu*exp*deg+reg*city+reg*exp*edu*deg+race*exp*edu*deg*city+reg+race+deg,data=train.data))
interaction.plot(city,reg,log(wage))
# race vs. city (maybe not)
race <- data$race
interaction.plot(race,reg,log(wage))
# race vs. city (maybe not)
interaction.plot(race,city,log(wage))
install.packages("rmarkdown")
(df %>% filter(race == "white" , reg =="midwest"))
nrow((df %>% filter(race == "white" , reg =="midwest")))
ggplot(df)+
geom_bar(stat = "identity", aes(x = reg, y = wage, fill = race), position = "dodge")
ggplot(df)+
geom_bar(aes(x = reg, y = wage, fill = race), position = "dodge")
ggplot(df)+
geom_bar(stat = "identity", aes(x = reg, y = wage, fill = race))
ggplot(df)+
geom_bar(stat = "identity", aes(x = reg, y = wage, fill = race), position = "dodge")
ggplot(df)+
geom_point(aes(x = reg, y = wage, color = race))
ggplot(df)+
geom_boxplot(aes(x = reg, y = wage, color = race))
ggplot(df)+
geom_boxplot(aes(x = reg, y = log(wage), color = race))
ggplot(df)+
geom_boxplot(aes(x = city, y = log(wage), color = race))
ggplot(df)+
geom_boxplot(aes(x = deg, y = log(wage), color = race))
ggplot(df)+
# edu vs.degree (the lines do cross)
plot(data$edu,log(wage),col=data$deg)
degree <- data$deg=="yes"
abline(lm(log(wage)[degree]~data$edu[degree]),col="red")
log(wage)[degree]
head(log(wage)[degree])
head(log(wage))
nrow(log(wage)[degree])
length(log(wage)[degree])
length(log(wage))
length(log(wage)[-degree])
head(log(wage)[-degree])
length(log(wage))
head(log(wage))
head(log(wage)[race])
length(log(wage)[race])
length(log(wage)[-race])
length(-degree)
length(degree)
abline(lm(log(wage)[-degree]~data$edu[-degree]),col="black")
head(degree)
head(-degree)
length(degree == T)
length(degree == F)
length(degree == 0)
length(degree == 1)
# exp vs. race (the lines do cross)
plot(data$exp,log(wage),col=data$race)
plot(data$exp,log(wage))
black <- data$race=="black"
white <- data$race=="white"
other <- data$race=="other"
lines(supsmu(data$exp[black],log(data$wage)[black]),col=2)
lines(supsmu(data$exp[white],log(data$wage)[white]),col=3)
lines(supsmu(data$exp[other],log(data$wage)[other]),col=4)
legend("topright",legend=c("Black","White","Other"),col=c(2,3,4),lty=c(1,1,1))
ggplot(data, aes(x = exp, y = log(wage))) +
ggplot(data, aes(x = exp, y = log(wage), group = race)) +
geom_point()
ggplot(data, aes(x = exp, y = log(wage), group = race)) +
geom_point()+
geom_smooth()
ggplot(data, aes(x = exp, y = log(wage), group = race, color = race)) +
geom_point()
ggplot(data, aes(x = exp, y = log(wage), group = race, color = race)) +
geom_point()+
geom_smooth()
ggplot(data, aes(x = exp, y = log(wage), group = race, color = race)) +
geom_smooth()
ggplot(data, aes(x = exp, y = log(wage), group = race, color = race)) +
geom_smooth()
ggplot(data, aes(x = exp, y = log(wage), group = race, color = race)) +
geom_point(color = "black")+
geom_smooth()
ggplot(data, aes(x = exp, y = log(wage), group = race, color = race)) +
geom_smooth()
# Defining indicators (dummy variables)
black <- I(data$race=="black")
white <- I(data$race=="white")
other <- I(data$race=="other")
y=c(6.1,7.1,7.4,6.3,6.5,5.7,6.6,8.1,6.3,6.9)
x1=c(22.8,28.7,29.7,18.3,21.1,21.2,22.2,22.3,21.8,31.2)
x2=c(43,55.3,48.5,38.8,46.2,39.9,43.1,48.5,40,56.7)
x3=c(23.8,24.8,23.9,16.6,19.6,21.4,20.7,21.8,20.6,25.2)
x4=c(9.2,12.0,10.4,9.8,9.8,7.7,10.9,5.5,11.6,11.6)
x5=c(6,10,5,4,5,6,7,5,7,9)
n=length(y)
n
##################################################
#Model Selection Criteria (page 158 in the notes)
##################################################
interaction.plot(city,reg,log(wage))
?interaction.plot
summary(lm(wage~city+reg+city*reg, data = data))
?pairs
pairs(y)
pairs(y,x1)
pairs(y,x1,x2)
?as.data.frame
mod_data <- as.data.frame(y, x1,x2,x3,x4,x5)
mod_data
mod_data <- as.data.frame(list(y, x1,x2,x3,x4,x5))
mod_data
mod_data <- data.frame(list(y, x1,x2,x3,x4,x5))
mod_data
mod_data <- data.frame(y, x1,x2,x3,x4,x5)
mod_data
pairs(mod_data)
?interaction.plot
interaction.plot(x1,x2,y)
?anova
anova(lm(y~x1))
summary(lm(y~x1))
?ancova
drug <- read.table("Example.23.txt", header=T)
drug <- read.table("Example23.txt", header=T)
?setwd
getwd()
drug <- read.table("Example23.txt", header=T)
str(drug)
pairs(drug)
pairs(drug[c(1,2,5,6)])
cor(drug)
pairs(drug)
pairs(drug[c(1,2,5,6)])
pairs(drug)
pairs(drug[c(1,2,5,6)])
pairs(drug)
pairs(drug[c(1,2,4,5,6)])
pairs(drug[c(1,2,5,6,7)])
pairs(drug[c(1,2,5,6,7,8)])
pairs(drug[c(1,2,5,6,7)])
pairs(drug)
pairs(drug[c(1,2,5,6,7)])
lm(wage~exp+edu+exp*edu, data=data)
summary(lm(wage~exp+edu+exp*edu, data=data)
)
summary(lm(wage~race+edu+race*edu, data=data))
?interaction.plot\
?interaction.plot
anova(> lm(wage~exp+edu+exp*edu, data=data))
anova(lm(wage~exp+edu+exp*edu, data=data))
anova(lm(wage~race+edu+race*edu, data=data))
summary(lm(wage~exp+edu+exp*edu, data=data))
anova(lm(wage~race+edu+race*edu, data=data))
summary(lm(wage~race+edu+race*edu, data=data))
interaction.plot(race, edu, wage, data = data)
edu <- data$edu
interaction(race, edu, wage)
interaction.plot(race, edu, wage)
summary(lm(wage~race+edu+race*edu, data=data))
anova(lm(wage~race+edu+race*edu, data=data))
anova(lm(wage~race+exp+race*exp, data=data))
anova(lm(wage~race+city+race*city, data=data))
anova(lm(wage~race+reg+race*reg, data=data))
str(data)
anova(lm(wage~race+deg+race*deg, data=data))
anova(lm(wage~race+emp+race*emp, data=data))
anova(lm(wage~race+com+race*com, data=data))
install.packages("leaps")
install.packages("bestglm")
library(leaps)
library(bestglm)
min.model <- lm(y~1, data=mod_data)
full.model <- formula(lm(y~x1+x2+x3+x4+x5, data= mod_data))
step(min.model, scope = full.model, direction = c("forward"))
full.model <- formula(lm(log(wage)~edu+I(edu^2)+exp+I(exp^2)+city+reg+race+deg+com,data=train.data))
min.model <- lm(wage~1, data= data)
step(min.model, scope = full.model, direction = c("forward"))
anova(lm(formula = wage ~ I(edu^2) + exp + I(exp^2) + city + race +
reg + deg, data = data))
summary(lm(formula = wage ~ I(edu^2) + exp + I(exp^2) + city + race +
reg + deg, data = data))
summary(lm(formula = wage ~ I(edu^2) + exp + I(exp^2) + exp*edu+ city + race +
reg + deg, data = data))
full.model <- formula(lm(wage~edu+exp+city+reg+race+deg+com,data=train.data))
step(min.model, scope = full.model, direction = c("forward"))
summary(lm(formula = wage ~ edu + exp + city + race + reg + deg, data = data))
str(data)
predictors <- cbind(data$edu, data$exp, data$city, data$reg, data$race, data$deg,data$com,data$emp)
leaps.sub <- leaps(x=predictors, y = data$wage)
plot(leaps.sub$size, leaps.sub$Cp)
lines(leaps.sub$size, leaps.sub$Cp)
select=leaps.sub$Cp==min(leaps.sub$Cp)
select = leaps.sub$which[select,]
predictors[,select]
regsubsets.sub = regsubsets(x=predictors, y = data$wage)
summary(regsubsets.sub, scale = "Cp")
plot(regsubsets.sub, scale="Cp")
summary(regsubsets.sub, scale = "adjr2")
plot(regsubsets.sub, scale="ajdr2")
plot(regsubsets.sub, scale="ajdr")
summary(regsubsets.sub, scale = "adjr2")$adjr
str(data)
library(leaps)
install.packages("leaps")
library(leaps)
install.packages("bestglm")
library(bestglm)
min.model <- lm(wage~1, data=data)
head(data)
str(data)
length(df)
str(df)
min.model <- lm(wage~1, data=data)
full.model <- formula(lm(wage~edu+exp+( edu* exp)+
( city)+
( edu* city)+
( exp* city)+
( edu* exp* city)+
( reg)+
( edu* reg)+
( exp* reg)+
( edu* exp* reg)+
( city* reg)+
( edu* city* reg)+
( exp* city* reg)+
( edu* exp* city* reg)+
( race)+
( edu* race)+
( exp* race)+
( edu* exp* race)+
( city* race)+
( edu* city* race)+
( exp* city* race)+
( edu* exp* city* race)+
( reg* race)+
( edu* reg* race)+
( exp* reg* race)+
( edu* exp* reg* race)+
( city* reg* race)+
( edu* city* reg* race)+
( exp* city* reg* race)+
( edu* exp* city* reg* race)+
( deg)+
( edu* deg)+
( exp* deg)+
( edu* exp* deg)+
( city* deg)+
( edu* city* deg)+
( exp* city* deg)+
( edu* exp* city* deg)+
( reg* deg)+
( edu* reg* deg)+
( exp* reg* deg)+
( edu* exp* reg* deg)+
( city* reg* deg)+
( edu* city* reg* deg)+
( exp* city* reg* deg)+
( edu* exp* city* reg* deg)+
( race* deg)+
( edu* race* deg)+
( exp* race* deg)+
( edu* exp* race* deg)+
( city* race* deg)+
( edu* city* race* deg)+
( exp* city* race* deg)+
( edu* exp* city* race* deg)+
( reg* race* deg)+
( edu* reg* race* deg)+
( exp* reg* race* deg)+
( edu* exp* reg* race* deg)+
( city* reg* race* deg)+
( edu* city* reg* race* deg)+
( exp* city* reg* race* deg)+
( edu* exp* city* reg* race* deg)+
( com)+
( edu* com)+
( exp* com)+
( edu* exp* com)+
( city* com)+
( edu* city* com)+
( exp* city* com)+
( edu* exp* city* com)+
( reg* com)+
( edu* reg* com)+
( exp* reg* com)+
( edu* exp* reg* com)+
( city* reg* com)+
( edu* city* reg* com)+
( exp* city* reg* com)+
( edu* exp* city* reg* com)+
( race* com)+
( edu* race* com)+
( exp* race* com)+
( edu* exp* race* com)+
( city* race* com)+
( edu* city* race* com)+
( exp* city* race* com)+
( edu* exp* city* race* com)+
( reg* race* com)+
( edu* reg* race* com)+
( exp* reg* race* com)+
( edu* exp* reg* race* com)+
( city* reg* race* com)+
( edu* city* reg* race* com)+
( exp* city* reg* race* com)+
( edu* exp* city* reg* race* com)+
( deg* com)+
( edu* deg* com)+
( exp* deg* com)+
( edu* exp* deg* com)+
( city* deg* com)+
( edu* city* deg* com)+
( exp* city* deg* com)+
( edu* exp* city* deg* com)+
( reg* deg* com)+
( edu* reg* deg* com)+
( exp* reg* deg* com)+
( edu* exp* reg* deg* com)+
( city* reg* deg* com)+
( edu* city* reg* deg* com)+
( exp* city* reg* deg* com)+
( edu* exp* city* reg* deg* com)+
( race* deg* com)+
( edu* race* deg* com)+
( exp* race* deg* com)+
( edu* exp* race* deg* com)+
( city* race* deg* com)+
( edu* city* race* deg* com)+
( exp* city* race* deg* com)+
( edu* exp* city* race* deg* com)+
( reg* race* deg* com)+
( edu* reg* race* deg* com)+
( exp* reg* race* deg* com)+
( edu* exp* reg* race* deg* com)+
( city* reg* race* deg* com)+
( edu* city* reg* race* deg* com)+
( exp* city* reg* race* deg* com)+
( edu* exp* city* reg* race* deg* com)+
( emp)+
( edu* emp)+
( exp* emp)+
( edu* exp* emp)+
( city* emp)+
( edu* city* emp)+
( exp* city* emp)+
( edu* exp* city* emp)+
( reg* emp)+
( edu* reg* emp)+
( exp* reg* emp)+
( edu* exp* reg* emp)+
( city* reg* emp)+
( edu* city* reg* emp)+
( exp* city* reg* emp)+
( edu* exp* city* reg* emp)+
( race* emp)+
( edu* race* emp)+
( exp* race* emp)+
( edu* exp* race* emp)+
( city* race* emp)+
( edu* city* race* emp)+
( exp* city* race* emp)+
( edu* exp* city* race* emp)+
( reg* race* emp)+
( edu* reg* race* emp)+
( exp* reg* race* emp)+
( edu* exp* reg* race* emp)+
( city* reg* race* emp)+
( edu* city* reg* race* emp)+
( exp* city* reg* race* emp)+
( edu* exp* city* reg* race* emp)+
( deg* emp)+
( edu* deg* emp)+
( exp* deg* emp)+
( edu* exp* deg* emp)+
( city* deg* emp)+
( edu* city* deg* emp)+
( exp* city* deg* emp)+
( edu* exp* city* deg* emp)+
( reg* deg* emp)+
( edu* reg* deg* emp)+
( exp* reg* deg* emp)+
( edu* exp* reg* deg* emp)+
( city* reg* deg* emp)+
( edu* city* reg* deg* emp)+
( exp* city* reg* deg* emp)+
( edu* exp* city* reg* deg* emp)+
( race* deg* emp)+
( edu* race* deg* emp)+
( exp* race* deg* emp)+
( edu* exp* race* deg* emp)+
( city* race* deg* emp)+
( edu* city* race* deg* emp)+
( exp* city* race* deg* emp)+
( edu* exp* city* race* deg* emp)+
( reg* race* deg* emp)+
( edu* reg* race* deg* emp)+
( exp* reg* race* deg* emp)+
( edu* exp* reg* race* deg* emp)+
( city* reg* race* deg* emp)+
( edu* city* reg* race* deg* emp)+
( exp* city* reg* race* deg* emp)+
( edu* exp* city* reg* race* deg* emp)+
( com* emp)+
( edu* com* emp)+
( exp* com* emp)+
( edu* exp* com* emp)+
( city* com* emp)+
( edu* city* com* emp)+
( exp* city* com* emp)+
( edu* exp* city* com* emp)+
( reg* com* emp)+
( edu* reg* com* emp)+
( exp* reg* com* emp)+
( edu* exp* reg* com* emp)+
( city* reg* com* emp)+
( edu* city* reg* com* emp)+
( exp* city* reg* com* emp)+
( edu* exp* city* reg* com* emp)+
( race* com* emp)+
( edu* race* com* emp)+
( exp* race* com* emp)+
( edu* exp* race* com* emp)+
( city* race* com* emp)+
( edu* city* race* com* emp)+
( exp* city* race* com* emp)+
( edu* exp* city* race* com* emp)+
( reg* race* com* emp)+
( edu* reg* race* com* emp)+
( exp* reg* race* com* emp)+
( edu* exp* reg* race* com* emp)+
( city* reg* race* com* emp)+
( edu* city* reg* race* com* emp)+
( exp* city* reg* race* com* emp)+
( edu* exp* city* reg* race* com* emp)+
( deg* com* emp)+
( edu* deg* com* emp)+
( exp* deg* com* emp)+
( edu* exp* deg* com* emp)+
( city* deg* com* emp)+
( edu* city* deg* com* emp)+
( exp* city* deg* com* emp)+
( edu* exp* city* deg* com* emp)+
( reg* deg* com* emp)+
( edu* reg* deg* com* emp)+
( exp* reg* deg* com* emp)+
( edu* exp* reg* deg* com* emp)+
( city* reg* deg* com* emp)+
( edu* city* reg* deg* com* emp)+
( exp* city* reg* deg* com* emp)+
( edu* exp* city* reg* deg* com* emp)+
( race* deg* com* emp)+
( edu* race* deg* com* emp)+
( exp* race* deg* com* emp)+
( edu* exp* race* deg* com* emp)+
( city* race* deg* com* emp)+
( edu* city* race* deg* com* emp)+
( exp* city* race* deg* com* emp)+
( edu* exp* city* race* deg* com* emp)+
( reg* race* deg* com* emp)+
( edu* reg* race* deg* com* emp)+
( exp* reg* race* deg* com* emp)+
( edu* exp* reg* race* deg* com* emp)+
( city* reg* race* deg* com* emp)+
( edu* city* reg* race* deg* com* emp)+
( exp* city* reg* race* deg* com* emp)+
( edu* exp* city* reg* race* deg* com* emp)+I(exp^2)+I(edu^2), data = data))
step(min.model,scope = full.model, direction = c("forward"))
white_midwest <- df %>% filter(race =="white", reg == "midwest")
df$reg2 <- as.character(df$reg)
regions <- unique(df$reg2)
anova(lm(formula = wage ~ I(edu^2) + exp + I(exp^2) + city + race +
emp + reg + deg + city:reg + exp:city + exp:reg + race:emp +
exp:emp + city:deg + exp:deg + reg:deg + emp:deg + exp:city:deg +
exp:reg:deg, data = data))
summary(lm(formula = wage ~ I(edu^2) + exp + I(exp^2) + city + race +
emp + reg + deg + city:reg + exp:city + exp:reg + race:emp +
exp:emp + city:deg + exp:deg + reg:deg + emp:deg + exp:city:deg +
exp:reg:deg, data = data))
