I( exp* city* race* com* emp* exp^2 )+
I( edu* exp* city* race* com* emp* exp^2 )+
I( reg* race* com* emp* exp^2 )+
I( edu* reg* race* com* emp* exp^2 )+
I( exp* reg* race* com* emp* exp^2 )+
I( edu* exp* reg* race* com* emp* exp^2 )+
I( city* reg* race* com* emp* exp^2 )+
I( edu* city* reg* race* com* emp* exp^2 )+
I( exp* city* reg* race* com* emp* exp^2 )+
I( edu* exp* city* reg* race* com* emp* exp^2 )+
I( deg* com* emp* exp^2 )+
I( edu* deg* com* emp* exp^2 )+
I( exp* deg* com* emp* exp^2 )+
I( edu* exp* deg* com* emp* exp^2 )+
I( city* deg* com* emp* exp^2 )+
I( edu* city* deg* com* emp* exp^2 )+
I( exp* city* deg* com* emp* exp^2 )+
I( edu* exp* city* deg* com* emp* exp^2 )+
I( reg* deg* com* emp* exp^2 )+
I( edu* reg* deg* com* emp* exp^2 )+
I( exp* reg* deg* com* emp* exp^2 )+
I( edu* exp* reg* deg* com* emp* exp^2 )+
I( city* reg* deg* com* emp* exp^2 )+
I( edu* city* reg* deg* com* emp* exp^2 )+
I( exp* city* reg* deg* com* emp* exp^2 )+
I( edu* exp* city* reg* deg* com* emp* exp^2 )+
I( race* deg* com* emp* exp^2 )+
I( edu* race* deg* com* emp* exp^2 )+
I( exp* race* deg* com* emp* exp^2 )+
I( edu* exp* race* deg* com* emp* exp^2 )+
I( city* race* deg* com* emp* exp^2 )+
I( edu* city* race* deg* com* emp* exp^2 )+
I( exp* city* race* deg* com* emp* exp^2 )+
I( edu* exp* city* race* deg* com* emp* exp^2 )+
I( reg* race* deg* com* emp* exp^2 )+
I( edu* reg* race* deg* com* emp* exp^2 )+
I( exp* reg* race* deg* com* emp* exp^2 )+
I( edu* exp* reg* race* deg* com* emp* exp^2 )+
I( city* reg* race* deg* com* emp* exp^2 )+
I( edu* city* reg* race* deg* com* emp* exp^2 )+
I( exp* city* reg* race* deg* com* emp* exp^2 )+
I( edu* exp* city* reg* race* deg* com* emp* exp^2 )+
I( edu^2* exp^2 )+
I( edu* edu^2* exp^2 )+
I( exp* edu^2* exp^2 )+
I( edu* exp* edu^2* exp^2 )+
I( city* edu^2* exp^2 )+
I( edu* city* edu^2* exp^2 )+
I( exp* city* edu^2* exp^2 )+
I( edu* exp* city* edu^2* exp^2 )+
I( reg* edu^2* exp^2 )+
I( edu* reg* edu^2* exp^2 )+
I( exp* reg* edu^2* exp^2 )+
I( edu* exp* reg* edu^2* exp^2 )+
I( city* reg* edu^2* exp^2 )+
I( edu* city* reg* edu^2* exp^2 )+
I( exp* city* reg* edu^2* exp^2 )+
I( edu* exp* city* reg* edu^2* exp^2 )+
I( race* edu^2* exp^2 )+
I( edu* race* edu^2* exp^2 )+
I( exp* race* edu^2* exp^2 )+
I( edu* exp* race* edu^2* exp^2 )+
I( city* race* edu^2* exp^2 )+
I( edu* city* race* edu^2* exp^2 )+
I( exp* city* race* edu^2* exp^2 )+
I( edu* exp* city* race* edu^2* exp^2 )+
I( reg* race* edu^2* exp^2 )+
I( edu* reg* race* edu^2* exp^2 )+
I( exp* reg* race* edu^2* exp^2 )+
I( edu* exp* reg* race* edu^2* exp^2 )+
I( city* reg* race* edu^2* exp^2 )+
I( edu* city* reg* race* edu^2* exp^2 )+
I( exp* city* reg* race* edu^2* exp^2 )+
I( edu* exp* city* reg* race* edu^2* exp^2 )+
I( deg* edu^2* exp^2 )+
I( edu* deg* edu^2* exp^2 )+
I( exp* deg* edu^2* exp^2 )+
I( edu* exp* deg* edu^2* exp^2 )+
I( city* deg* edu^2* exp^2 )+
I( edu* city* deg* edu^2* exp^2 )+
I( exp* city* deg* edu^2* exp^2 )+
I( edu* exp* city* deg* edu^2* exp^2 )+
I( reg* deg* edu^2* exp^2 )+
I( edu* reg* deg* edu^2* exp^2 )+
I( exp* reg* deg* edu^2* exp^2 )+
I( edu* exp* reg* deg* edu^2* exp^2 )+
I( city* reg* deg* edu^2* exp^2 )+
I( edu* city* reg* deg* edu^2* exp^2 )+
I( exp* city* reg* deg* edu^2* exp^2 )+
I( edu* exp* city* reg* deg* edu^2* exp^2 )+
I( race* deg* edu^2* exp^2 )+
I( edu* race* deg* edu^2* exp^2 )+
I( exp* race* deg* edu^2* exp^2 )+
I( edu* exp* race* deg* edu^2* exp^2 )+
I( city* race* deg* edu^2* exp^2 )+
I( edu* city* race* deg* edu^2* exp^2 )+
I( exp* city* race* deg* edu^2* exp^2 )+
I( edu* exp* city* race* deg* edu^2* exp^2 )+
I( reg* race* deg* edu^2* exp^2 )+
I( edu* reg* race* deg* edu^2* exp^2 )+
I( exp* reg* race* deg* edu^2* exp^2 )+
I( edu* exp* reg* race* deg* edu^2* exp^2 )+
I( city* reg* race* deg* edu^2* exp^2 )+
I( edu* city* reg* race* deg* edu^2* exp^2 )+
I( exp* city* reg* race* deg* edu^2* exp^2 )+
I( edu* exp* city* reg* race* deg* edu^2* exp^2 )+
I( com* edu^2* exp^2 )+
I( edu* com* edu^2* exp^2 )+
I( exp* com* edu^2* exp^2 )+
I( edu* exp* com* edu^2* exp^2 )+
I( city* com* edu^2* exp^2 )+
I( edu* city* com* edu^2* exp^2 )+
I( exp* city* com* edu^2* exp^2 )+
I( edu* exp* city* com* edu^2* exp^2 )+
I( reg* com* edu^2* exp^2 )+
I( edu* reg* com* edu^2* exp^2 )+
I( exp* reg* com* edu^2* exp^2 )+
I( edu* exp* reg* com* edu^2* exp^2 )+
I( city* reg* com* edu^2* exp^2 )+
I( edu* city* reg* com* edu^2* exp^2 )+
I( exp* city* reg* com* edu^2* exp^2 )+
I( edu* exp* city* reg* com* edu^2* exp^2 )+
I( race* com* edu^2* exp^2 )+
I( edu* race* com* edu^2* exp^2 )+
I( exp* race* com* edu^2* exp^2 )+
I( edu* exp* race* com* edu^2* exp^2 )+
I( city* race* com* edu^2* exp^2 )+
I( edu* city* race* com* edu^2* exp^2 )+
I( exp* city* race* com* edu^2* exp^2 )+
I( edu* exp* city* race* com* edu^2* exp^2 )+
I( reg* race* com* edu^2* exp^2 )+
I( edu* reg* race* com* edu^2* exp^2 )+
I( exp* reg* race* com* edu^2* exp^2 )+
I( edu* exp* reg* race* com* edu^2* exp^2 )+
I( city* reg* race* com* edu^2* exp^2 )+
I( edu* city* reg* race* com* edu^2* exp^2 )+
I( exp* city* reg* race* com* edu^2* exp^2 )+
I( edu* exp* city* reg* race* com* edu^2* exp^2 )+
I( deg* com* edu^2* exp^2 )+
I( edu* deg* com* edu^2* exp^2 )+
I( exp* deg* com* edu^2* exp^2 )+
I( edu* exp* deg* com* edu^2* exp^2 )+
I( city* deg* com* edu^2* exp^2 )+
I( edu* city* deg* com* edu^2* exp^2 )+
I( exp* city* deg* com* edu^2* exp^2 )+
I( edu* exp* city* deg* com* edu^2* exp^2 )+
I( reg* deg* com* edu^2* exp^2 )+
I( edu* reg* deg* com* edu^2* exp^2 )+
I( exp* reg* deg* com* edu^2* exp^2 )+
I( edu* exp* reg* deg* com* edu^2* exp^2 )+
I( city* reg* deg* com* edu^2* exp^2 )+
I( edu* city* reg* deg* com* edu^2* exp^2 )+
I( exp* city* reg* deg* com* edu^2* exp^2 )+
I( edu* exp* city* reg* deg* com* edu^2* exp^2 )+
I( race* deg* com* edu^2* exp^2 )+
I( edu* race* deg* com* edu^2* exp^2 )+
I( exp* race* deg* com* edu^2* exp^2 )+
I( edu* exp* race* deg* com* edu^2* exp^2 )+
I( city* race* deg* com* edu^2* exp^2 )+
I( edu* city* race* deg* com* edu^2* exp^2 )+
I( exp* city* race* deg* com* edu^2* exp^2 )+
I( edu* exp* city* race* deg* com* edu^2* exp^2 )+
I( reg* race* deg* com* edu^2* exp^2 )+
I( edu* reg* race* deg* com* edu^2* exp^2 )+
I( exp* reg* race* deg* com* edu^2* exp^2 )+
I( edu* exp* reg* race* deg* com* edu^2* exp^2 )+
I( city* reg* race* deg* com* edu^2* exp^2 )+
I( edu* city* reg* race* deg* com* edu^2* exp^2 )+
I( exp* city* reg* race* deg* com* edu^2* exp^2 )+
I( edu* exp* city* reg* race* deg* com* edu^2* exp^2 )+
I( emp* edu^2* exp^2 )+
I( edu* emp* edu^2* exp^2 )+
I( exp* emp* edu^2* exp^2 )+
I( edu* exp* emp* edu^2* exp^2 )+
I( city* emp* edu^2* exp^2 )+
I( edu* city* emp* edu^2* exp^2 )+
I( exp* city* emp* edu^2* exp^2 )+
I( edu* exp* city* emp* edu^2* exp^2 )+
I( reg* emp* edu^2* exp^2 )+
I( edu* reg* emp* edu^2* exp^2 )+
I( exp* reg* emp* edu^2* exp^2 )+
I( edu* exp* reg* emp* edu^2* exp^2 )+
I( city* reg* emp* edu^2* exp^2 )+
I( edu* city* reg* emp* edu^2* exp^2 )+
I( exp* city* reg* emp* edu^2* exp^2 )+
I( edu* exp* city* reg* emp* edu^2* exp^2 )+
I( race* emp* edu^2* exp^2 )+
I( edu* race* emp* edu^2* exp^2 )+
I( exp* race* emp* edu^2* exp^2 )+
I( edu* exp* race* emp* edu^2* exp^2 )+
I( city* race* emp* edu^2* exp^2 )+
I( edu* city* race* emp* edu^2* exp^2 )+
I( exp* city* race* emp* edu^2* exp^2 )+
I( edu* exp* city* race* emp* edu^2* exp^2 )+
I( reg* race* emp* edu^2* exp^2 )+
I( edu* reg* race* emp* edu^2* exp^2 )+
I( exp* reg* race* emp* edu^2* exp^2 )+
I( edu* exp* reg* race* emp* edu^2* exp^2 )+
I( city* reg* race* emp* edu^2* exp^2 )+
I( edu* city* reg* race* emp* edu^2* exp^2 )+
I( exp* city* reg* race* emp* edu^2* exp^2 )+
I( edu* exp* city* reg* race* emp* edu^2* exp^2 )+
I( deg* emp* edu^2* exp^2 )+
I( edu* deg* emp* edu^2* exp^2 )+
I( exp* deg* emp* edu^2* exp^2 )+
I( edu* exp* deg* emp* edu^2* exp^2 )+
I( city* deg* emp* edu^2* exp^2 )+
I( edu* city* deg* emp* edu^2* exp^2 )+
I( exp* city* deg* emp* edu^2* exp^2 )+
I( edu* exp* city* deg* emp* edu^2* exp^2 )+
I( reg* deg* emp* edu^2* exp^2 )+
I( edu* reg* deg* emp* edu^2* exp^2 )+
I( exp* reg* deg* emp* edu^2* exp^2 )+
I( edu* exp* reg* deg* emp* edu^2* exp^2 )+
I( city* reg* deg* emp* edu^2* exp^2 )+
I( edu* city* reg* deg* emp* edu^2* exp^2 )+
I( exp* city* reg* deg* emp* edu^2* exp^2 )+
I( edu* exp* city* reg* deg* emp* edu^2* exp^2 )+
I( race* deg* emp* edu^2* exp^2 )+
I( edu* race* deg* emp* edu^2* exp^2 )+
I( exp* race* deg* emp* edu^2* exp^2 )+
I( edu* exp* race* deg* emp* edu^2* exp^2 )+
I( city* race* deg* emp* edu^2* exp^2 )+
I( edu* city* race* deg* emp* edu^2* exp^2 )+
I( exp* city* race* deg* emp* edu^2* exp^2 )+
I( edu* exp* city* race* deg* emp* edu^2* exp^2 )+
I( reg* race* deg* emp* edu^2* exp^2 )+
I( edu* reg* race* deg* emp* edu^2* exp^2 )+
I( exp* reg* race* deg* emp* edu^2* exp^2 )+
I( edu* exp* reg* race* deg* emp* edu^2* exp^2 )+
I( city* reg* race* deg* emp* edu^2* exp^2 )+
I( edu* city* reg* race* deg* emp* edu^2* exp^2 )+
I( exp* city* reg* race* deg* emp* edu^2* exp^2 )+
I( edu* exp* city* reg* race* deg* emp* edu^2* exp^2 )+
I( com* emp* edu^2* exp^2 )+
I( edu* com* emp* edu^2* exp^2 )+
I( exp* com* emp* edu^2* exp^2 )+
I( edu* exp* com* emp* edu^2* exp^2 )+
I( city* com* emp* edu^2* exp^2 )+
I( edu* city* com* emp* edu^2* exp^2 )+
I( exp* city* com* emp* edu^2* exp^2 )+
I( edu* exp* city* com* emp* edu^2* exp^2 )+
I( reg* com* emp* edu^2* exp^2 )+
I( edu* reg* com* emp* edu^2* exp^2 )+
I( exp* reg* com* emp* edu^2* exp^2 )+
I( edu* exp* reg* com* emp* edu^2* exp^2 )+
I( city* reg* com* emp* edu^2* exp^2 )+
I( edu* city* reg* com* emp* edu^2* exp^2 )+
I( exp* city* reg* com* emp* edu^2* exp^2 )+
I( edu* exp* city* reg* com* emp* edu^2* exp^2 )+
I( race* com* emp* edu^2* exp^2 )+
I( edu* race* com* emp* edu^2* exp^2 )+
I( exp* race* com* emp* edu^2* exp^2 )+
I( edu* exp* race* com* emp* edu^2* exp^2 )+
I( city* race* com* emp* edu^2* exp^2 )+
I( edu* city* race* com* emp* edu^2* exp^2 )+
I( exp* city* race* com* emp* edu^2* exp^2 )+
I( edu* exp* city* race* com* emp* edu^2* exp^2 )+
I( reg* race* com* emp* edu^2* exp^2 )+
I( edu* reg* race* com* emp* edu^2* exp^2 )+
I( exp* reg* race* com* emp* edu^2* exp^2 )+
I( edu* exp* reg* race* com* emp* edu^2* exp^2 )+
I( city* reg* race* com* emp* edu^2* exp^2 )+
I( edu* city* reg* race* com* emp* edu^2* exp^2 )+
I( exp* city* reg* race* com* emp* edu^2* exp^2 )+
I( edu* exp* city* reg* race* com* emp* edu^2* exp^2 )+
I( deg* com* emp* edu^2* exp^2 )+
I( edu* deg* com* emp* edu^2* exp^2 )+
I( exp* deg* com* emp* edu^2* exp^2 )+
I( edu* exp* deg* com* emp* edu^2* exp^2 )+
I( city* deg* com* emp* edu^2* exp^2 )+
I( edu* city* deg* com* emp* edu^2* exp^2 )+
I( exp* city* deg* com* emp* edu^2* exp^2 )+
I( edu* exp* city* deg* com* emp* edu^2* exp^2 )+
I( reg* deg* com* emp* edu^2* exp^2 )+
I( edu* reg* deg* com* emp* edu^2* exp^2 )+
I( exp* reg* deg* com* emp* edu^2* exp^2 )+
I( edu* exp* reg* deg* com* emp* edu^2* exp^2 )+
I( city* reg* deg* com* emp* edu^2* exp^2 )+
I( edu* city* reg* deg* com* emp* edu^2* exp^2 )+
I( exp* city* reg* deg* com* emp* edu^2* exp^2 )+
I( edu* exp* city* reg* deg* com* emp* edu^2* exp^2 )+
I( race* deg* com* emp* edu^2* exp^2 )+
I( edu* race* deg* com* emp* edu^2* exp^2 )+
I( exp* race* deg* com* emp* edu^2* exp^2 )+
I( edu* exp* race* deg* com* emp* edu^2* exp^2 )+
I( city* race* deg* com* emp* edu^2* exp^2 )+
I( edu* city* race* deg* com* emp* edu^2* exp^2 )+
I( exp* city* race* deg* com* emp* edu^2* exp^2 )+
I( edu* exp* city* race* deg* com* emp* edu^2* exp^2 )+
I( reg* race* deg* com* emp* edu^2* exp^2 )+
I( edu* reg* race* deg* com* emp* edu^2* exp^2 )+
I( exp* reg* race* deg* com* emp* edu^2* exp^2 )+
I( edu* exp* reg* race* deg* com* emp* edu^2* exp^2 )+
I( city* reg* race* deg* com* emp* edu^2* exp^2 )+
I( edu* city* reg* race* deg* com* emp* edu^2* exp^2 )+
I( exp* city* reg* race* deg* com* emp* edu^2* exp^2 )+
I( edu* exp* city* reg* race* deg* com* emp* edu^2* exp^2 ), data = data))
step(min.model,scope = full.model, direction = c("forward"))
str(Data)
str(data)
model <- lm(formula = log(wage) ~ I(edu^2) + exp + I(exp^2) + city + race +
reg + emp + edu + exp:edu + city:edu + exp:reg + city:reg +
reg:edu + exp:city + race:emp + city:race, data = data)
summary(model)
dfplot4<-ggplot(data, aes(x =x, y = dfbetas(model)[,5])) +
geom_point() +
geom_hline(aes(yintercept = y.intc, col= "red")) +
geom_hline(aes(yintercept = -y.intc, col = "red"))+ theme(legend.position="none")
library(tidyverse)
dfplot4<-ggplot(data, aes(x =x, y = dfbetas(model)[,5])) +
geom_point() +
geom_hline(aes(yintercept = y.intc, col= "red")) +
geom_hline(aes(yintercept = -y.intc, col = "red"))+ theme(legend.position="none")
dfplot4
n <- nrow(data)
x <- seq(1, nrow(data))
y.intc <- 2/sqrt(n)
dfplot4<-ggplot(data, aes(x =x, y = dfbetas(model)[,5])) +
geom_point() +
geom_hline(aes(yintercept = y.intc, col= "red")) +
geom_hline(aes(yintercept = -y.intc, col = "red"))+ theme(legend.position="none")
dfplot4
library(gridExtra)
require(gridExtra)
install.packages("gridExtra")
require(gridExtra)
length(dfbetas(model))
ncol(dfbetas(model))
cor(data)
str(data)
pairs(data)
vif(model)
library(car)
vif(model)
city <- I(data$city=="yes")
white <- I(data$race=="white")
other <- I(data$race=="other")
northeast <- I(data$reg=="northeast")
south <- I(data$reg=="south")
west <- I(data$reg=="west")
lwage <- I(log(data$wage))
lineaeexp <- poly(data$exp,2)[,1]
exp <- I(data$exp) # same as above
quadexp <- poly(data$exp,2)[,2]
lineaeedu <- poly(data$edu,2)[,1]
edu <- I(data$edu) #same as above
quadedu <- poly(data$edu,2)[,2]
emp <- I(data$emp)
exp.edu <- I(exp*edu)
cityyes.edu <- I(city*edu)
exp.south <- I(exp*south)
exp.northeast <- I(exp*northeast)
exp.west <- I(exp*west)
cityyes.south <- I(city*south)
cityyes.west <- I(city*west)
cityyes.northeast <- I(city*northeast)
south.edu <- I(south*edu)
northeast.edu <- I(northeast*edu)
west.edu <- I(west*edu)
exp.cityyes <- I(exp*city)
white.emp <- I(white*emp)
other.emp <- I(other*emp)
white.cityyes <- I(city*white)
other.cityyes <- I(city*other)
model.manual <- lm(lwage~lineaeexp +quadexp +lineaeedu +quadedu  +city +other +white +northeast +south +west +emp +exp.edu +cityyes.edu +exp.south +exp.northeast +exp.west +cityyes.south +cityyes.west +cityyes.northeast +south.edu +northeast.edu +west.edu +exp.cityyes +white.emp +other.emp +white.cityyes +other.cityyes)
#same as the original final model- just manually inputted predictor
summary(model.manual)
vif(model.manual)
vif(lm(log(wage)~edu+I(edu^2)+exp+I(exp^2)+city+reg+race+deg,data=train.data))
?vif
mean(vif(model.manual))
?cor
str(data)
numeric_preds <- data.frame(lwage=lwage, edu=edu, exp=exp, com=com, emp=emp)
numeric_preds <- data.frame(lwage=lwage, edu=edu, exp=exp, emp=emp)
cor(numeric_preds)
str(X.test)
X.test <- data.frame(city = city.test,
white = white.test,
other= other.test,
northeast= northeast.test,
south = south.test,
west= west.test,
lineaeexp= lineaeexp.test,
quadexp= quadexp.test,
lineaeedu= lineaeedu.test,
quadedu= quadedu.test,
emp= emp.test,
exp.edu = exp.edu.test,
cityyes.edu= cityyes.edu.test,
exp.south= exp.south.test,
exp.northeast= exp.northeast.test,
exp.west= exp.west.test,
cityyes.south= cityyes.south.test,
cityyes.west= cityyes.west.test,
cityyes.northeast= cityyes.northeast.test,
south.edu= south.edu.test,
northeast.edu = northeast.edu.test,
west.edu = west.edu.test,
exp.cityyes= exp.cityyes.test,
white.emp= white.emp.test,
other.emp= other.emp.test,
white.cityyes= white.cityyes.test,
other.cityyes= other.cityyes.test)
city <- I(data$city=="yes")
white <- I(data$race=="white")
other <- I(data$race=="other")
northeast <- I(data$reg=="northeast")
south <- I(data$reg=="south")
west <- I(data$reg=="west")
lwage <- I(log(data$wage))
lineaeexp <- poly(data$exp,2)[,1]
exp <- I(data$exp) # same as above
quadexp <- poly(data$exp,2)[,2]
lineaeedu <- poly(data$edu,2)[,1]
edu <- I(data$edu) #same as above
quadedu <- poly(data$edu,2)[,2]
emp <- I(data$emp)
exp.edu <- I(exp*edu)
cityyes.edu <- I(city*edu)
exp.south <- I(exp*south)
exp.northeast <- I(exp*northeast)
exp.west <- I(exp*west)
cityyes.south <- I(city*south)
cityyes.west <- I(city*west)
cityyes.northeast <- I(city*northeast)
south.edu <- I(south*edu)
northeast.edu <- I(northeast*edu)
west.edu <- I(west*edu)
exp.cityyes <- I(exp*city)
white.emp <- I(white*emp)
other.emp <- I(other*emp)
white.cityyes <- I(city*white)
other.cityyes <- I(city*other)
model.manual <- lm(lwage~lineaeexp +quadexp +lineaeedu +quadedu  +city +other +white +northeast +south +west +emp +exp.edu +cityyes.edu +exp.south +exp.northeast +exp.west +cityyes.south +cityyes.west +cityyes.northeast +south.edu +northeast.edu +west.edu +exp.cityyes +white.emp +other.emp +white.cityyes +other.cityyes)
#same as the original final model- just manually inputted predictor
summary(model.manual)
# Define test data frame for test data
city.test <- I(test.data$city=="yes")
white.test <- I(test.data$race=="white")
other.test <- I(test.data$race=="other")
northeast.test <- I(test.data$reg=="northeast")
south.test <- I(test.data$reg=="south")
west.test <- I(test.data$reg=="west")
lwage.test <- I(log(test.data$wage))
lineaeexp.test <- poly(test.data$exp,2)[,1]
quadexp.test <- poly(test.data$exp,2)[,2]
lineaeedu.test <- poly(test.data$edu,2)[,1]
quadedu.test <- poly(test.data$edu,2)[,2]
emp.test <- I(test.data$emp)
exp.edu.test <- I(lineaeexp.test*lineaeedu.test)
cityyes.edu.test <- I(city.test*lineaeedu.test)
exp.south.test <- I(lineaeexp.test*south.test)
exp.northeast.test <- I(lineaeexp.test*northeast.test)
exp.west.test <- I(lineaeexp.test*west.test)
cityyes.south.test <- I(city.test*south.test)
cityyes.west.test <- I(city.test*west.test)
cityyes.northeast.test <- I(city.test*northeast.test)
south.edu.test <- I(south.test*lineaeedu.test)
northeast.edu.test <- I(northeast.test*lineaeedu.test)
west.edu.test <- I(west.test*lineaeedu.test)
exp.cityyes.test <- I(lineaeexp.test*city.test)
white.emp.test <- I(white.test*emp.test)
other.emp.test <- I(other.test*emp.test)
white.cityyes.test <- I(city.test*white.test)
other.cityyes.test <- I(city.test*other.test)
X.test <- data.frame(city = city.test,
white = white.test,
other= other.test,
northeast= northeast.test,
south = south.test,
west= west.test,
lineaeexp= lineaeexp.test,
quadexp= quadexp.test,
lineaeedu= lineaeedu.test,
quadedu= quadedu.test,
emp= emp.test,
exp.edu = exp.edu.test,
cityyes.edu= cityyes.edu.test,
exp.south= exp.south.test,
exp.northeast= exp.northeast.test,
exp.west= exp.west.test,
cityyes.south= cityyes.south.test,
cityyes.west= cityyes.west.test,
cityyes.northeast= cityyes.northeast.test,
south.edu= south.edu.test,
northeast.edu = northeast.edu.test,
west.edu = west.edu.test,
exp.cityyes= exp.cityyes.test,
white.emp= white.emp.test,
other.emp= other.emp.test,
white.cityyes= white.cityyes.test,
other.cityyes= other.cityyes.test)
head(X.test)
y.hat.mspr <- predict(model.manual,newdata = X.test)
# Note that y.hat.mspr has the same length as the test data
length(y.hat.mspr)
# Compute MSPR
n.star <- nrow(test.data)
MSPR <- 1/n.star*sum((lwage.test-y.hat.mspr)^2)
MSE <- (summary(lm(model.manual))$sigma)^2
# Compare MSPR  to MSE
MSPR
MSE
MSPR/MSE
str(X.test)
vif(model)
mean(vif(model))
mean(vif(model)[,3])
numeric_preds <- data.frame(lwage=lwage, edu=edu, exp=exp, edu.sq = quadedu, exp.sq = quadexp, exp.edu = exp.edu,  emp=emp)
cor(numeric_preds)
